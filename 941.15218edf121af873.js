"use strict";(self.webpackChunkgelenium_ui_demo=self.webpackChunkgelenium_ui_demo||[]).push([[941],{4941:(H,h,s)=>{s.r(h),s.d(h,{CmCheckboxModule:()=>R});var d=s(6895),t=s(433),i=s(7084),u=s(3848),c=s(9544),e=s(1571);let Z=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez,t.UX,i.To,u.Nh,c.uh,c.c6]}),n})(),f=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez,t.u5,t.UX,i.To,u.Nh,c.uh]}),n})(),_=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez,t.UX,i.To,u.Nh,c.uh]}),n})(),U=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez,t.UX,i.To,u.Nh,c.uh]}),n})(),A=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez]}),n})();var b=s(6001),C=s(590),m=s(4171),v=s(4577),r=s(6986);let T=(()=>{class n{constructor(){this.labelShowSource=r.sx,this.labelHtml=r.zC,this.labelTs=r.QS,this.labelCss=r.Er,this.urlCmCheckbox="/"+m.g.get("URL_COMPONENTS")+"/"+m.g.get("URL_COMPONENTS_CHECKBOX"),this.formGroup01=new t.cw({model01a:new t.NI(!0,[]),model01b:new t.NI(!1,[]),model01c:new t.NI(!0,[]),model01d:new t.NI(!0,[]),model01e:new t.NI(!1,[]),model01f:new t.NI(!1,[])})}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox-basic"]],inputs:{labelShowSource:"labelShowSource",labelHtml:"labelHtml",labelTs:"labelTs",labelCss:"labelCss"},decls:82,vars:6,consts:[["mr-vr",""],[1,"app-hover-link"],[3,"href"],["source","ts"],["source","html"],["novalidate","","autocomplete","off",3,"formGroup"],[1,"app-group"],[1,"app-elem","cbbs-elem"],["formControlName","model01a"],["formControlName","model01b"],["formControlName","model01c","isIndeterm",""],["formControlName","model01d","isDisabled",""],["formControlName","model01e","isDisabled",""],["formControlName","model01f","isIndeterm","","isDisabled",""],["animationDuration","0ms"],[3,"label"],["source","css"],["br-nn",""]],template:function(l,o){1&l&&(e.TgZ(0,"section",0)(1,"h3",1),e._uU(2," Basic. "),e.TgZ(3,"a",2),e._uU(4,"#"),e.qZA()(),e.TgZ(5,"span"),e._uU(6," To use this component, in your module you need to add: "),e.qZA(),e.TgZ(7,"code")(8,"pre",3),e._uU(9,"import { GlnCheckboxModule } from 'gelenium-ui';"),e.qZA()(),e.TgZ(10,"p"),e._uU(11,' The GlnCheckbox component displays the behavior of a simple "state checkbox" property (<input type="checkbox">). A component allows you to select one or more of these components. '),e.qZA(),e.TgZ(12,"span"),e._uU(13," For example:"),e.qZA(),e.TgZ(14,"code")(15,"pre",4),e._uU(16,"<"),e.TgZ(17,"strong"),e._uU(18,"gln-checkbox"),e.qZA(),e._uU(19,' formControlName="model01">\n</'),e.TgZ(20,"strong"),e._uU(21,"gln-checkbox"),e.qZA(),e._uU(22,">"),e.qZA()()(),e.TgZ(23,"form",5)(24,"div",6)(25,"div",7)(26,"div")(27,"small")(28,"em"),e._uU(29,"Checked."),e.qZA()()(),e._UZ(30,"gln-checkbox",8),e.qZA(),e.TgZ(31,"div",7)(32,"div")(33,"small")(34,"em"),e._uU(35,"Unchecked."),e.qZA()()(),e._UZ(36,"gln-checkbox",9),e.qZA(),e.TgZ(37,"div",7)(38,"div")(39,"small")(40,"em"),e._uU(41,"Indeterminate."),e.qZA()()(),e._UZ(42,"gln-checkbox",10),e.qZA()(),e.TgZ(43,"div",6)(44,"div",7)(45,"div")(46,"small")(47,"em"),e._uU(48,"Disabled Checked."),e.qZA()()(),e._UZ(49,"gln-checkbox",11),e.qZA(),e.TgZ(50,"div",7)(51,"div")(52,"small")(53,"em"),e._uU(54,"Disabled Unchecked."),e.qZA()()(),e._UZ(55,"gln-checkbox",12),e.qZA(),e.TgZ(56,"div",7)(57,"div")(58,"small")(59,"em"),e._uU(60,"Disabled Indeterminate."),e.qZA()()(),e._UZ(61,"gln-checkbox",13),e.qZA()()(),e.TgZ(62,"section",0)(63,"mat-accordion")(64,"mat-expansion-panel")(65,"mat-expansion-panel-header")(66,"mat-panel-title"),e._uU(67),e.qZA()(),e.TgZ(68,"mat-tab-group",14)(69,"mat-tab",15)(70,"code")(71,"pre",4),e._uU(72,'<form [formGroup]="formGroup01"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Checked.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01a">\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Unchecked.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01b">\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Indeterminate.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01c"\n        isIndeterm>\n      </gln-checkbox>\n    </div>\n\n  </div>\n\n  <div class="app-group">\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Disabled Checked.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01d"\n        isDisabled>\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Disabled Unchecked.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01e"\n        isDisabled>\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbbs-elem">\n      <div>\n        <small><em>Disabled Indeterminate.</em></small>\n      </div>\n      <gln-checkbox formControlName="model01f"\n        isIndeterm\n        isDisabled>\n      </gln-checkbox>\n    </div>\n\n  </div>\n</form>'),e.qZA()()(),e.TgZ(73,"mat-tab",15)(74,"code")(75,"pre",3),e._uU(76,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent {\n  public formGroup01: FormGroup = new FormGroup({\n    model01a: new FormControl(true, []),\n    model01b: new FormControl(false, []),\n    model01c: new FormControl(true, []),\n    model01d: new FormControl(true, []),\n    model01e: new FormControl(false, []),\n    model01f: new FormControl(false, []),\n  });\n}"),e.qZA()()(),e.TgZ(77,"mat-tab",15)(78,"code")(79,"pre",16),e._uU(80,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n  .cbbs-elem {\n    min-width: 17ch;\n  }\n}"),e.qZA()()()()()()(),e._UZ(81,"hr",17)),2&l&&(e.xp6(3),e.Q6J("href",o.urlCmCheckbox+"#Basic",e.LSH),e.xp6(20),e.Q6J("formGroup",o.formGroup01),e.xp6(44),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(4),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss))},dependencies:[t._Y,t.JJ,t.JL,t.sg,t.u,i.pp,i.ib,i.yz,i.yK,u.SP,u.uX,c.Tz],styles:["app-cm-checkbox-basic{display:block}app-cm-checkbox-basic .cbbs-elem{min-width:17ch}\n"],encapsulation:2,changeDetection:0}),n})();const x=function(n){return{"cbat2-err":n}};let k=(()=>{class n{constructor(){this.labelShowSource=r.sx,this.labelHtml=r.zC,this.labelTs=r.QS,this.labelCss=r.Er,this.urlCmCheckbox="/"+m.g.get("URL_COMPONENTS")+"/"+m.g.get("URL_COMPONENTS_CHECKBOX"),this.data02a=!0,this.data02b=!0,this.formGroup02a=new t.cw({model02a:new t.NI(!0,[]),model02b:new t.NI(!0,[]),model02c:new t.NI(!0,[])}),this.control02d={model02d:new t.NI(!0,[]),model02e:new t.NI(!0,[]),model02f:new t.NI(null,[])},this.formGroup02d=new t.cw(this.control02d),this.formGroup02h=new t.cw({model02h:new t.NI(!0,[]),model02i:new t.NI(!1,[]),model02j:new t.NI(!0,[]),model02k:new t.NI(!1,[])})}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox-attributes"]],inputs:{labelShowSource:"labelShowSource",labelHtml:"labelHtml",labelTs:"labelTs",labelCss:"labelCss"},decls:203,vars:29,consts:[["mr-vr",""],[1,"app-hover-link"],[3,"href"],[1,"app-group"],[1,"app-elem"],["id","unique_id_checkbox02a",3,"isChecked","change"],[3,"ngModel","ngModelChange"],["novalidate","","autocomplete","off",3,"formGroup"],[1,"app-elem","cbat1-elem"],["formControlName","model02a","isReadOnly",""],["formControlName","model02b","isDisabled",""],["formControlName","model02c","isIndeterm",""],["animationDuration","0ms"],[3,"label"],["source","html"],["source","ts"],["source","css"],["br-nn",""],["mr-vr","","id","attributes-supported02"],[1,"app-elem","cbat2-elem"],["formControlName","model02d","isNoHover",""],["formControlName","model02e","isNoRipple",""],["formControlName","model02f","isRequired",""],[3,"ngClass"],["mr-vr","","id","attributes-position"],[1,"app-elem","cbat3-elem"],["formControlName","model02h","position","top"],["formControlName","model02i","position","bottom"],["formControlName","model02j","position","start"],["formControlName","model02k","position","end"]],template:function(l,o){1&l&&(e.TgZ(0,"section",0)(1,"h3",1),e._uU(2," Attributes. "),e.TgZ(3,"a",2),e._uU(4,"#"),e.qZA()(),e.TgZ(5,"p"),e._uU(6,"The following attributes are supported:"),e.qZA(),e.TgZ(7,"ul")(8,"li"),e._uU(9,'"id" - parameter for defining the unique identifier of the input field (id="unique_identifier"); '),e.qZA(),e.TgZ(10,"li"),e._uU(11,' "config" - Defines a configuration object. '),e.TgZ(12,"a",2),e._uU(13,"More details."),e.qZA()(),e.TgZ(14,"li"),e._uU(15,'"isChecked" - specifies only the initial value of the element (isChecked);'),e.qZA(),e.TgZ(16,"li"),e._uU(17,'"isDisabled" - a sign that the field is disabled (isDisabled);'),e.qZA(),e.TgZ(18,"li"),e._uU(19,'"isReadOnly" - Specifies the status of an element as read-only (isReadOnly);'),e.qZA(),e.TgZ(20,"li"),e._uU(21,' "isIndeterm" - Determines whether the checkbox is in the "indeterminate" state (isIndeterm); '),e.qZA()()(),e.TgZ(22,"div",3)(23,"div",4)(24,"div")(25,"small")(26,"em"),e._uU(27),e.qZA()()(),e.TgZ(28,"gln-checkbox",5),e.NdJ("change",function(p){return o.data02a=p.checked}),e._uU(29,"Checked "),e.qZA()(),e.TgZ(30,"div",4)(31,"div")(32,"small")(33,"em"),e._uU(34),e.qZA()()(),e.TgZ(35,"gln-checkbox",6),e.NdJ("ngModelChange",function(p){return o.data02b=p}),e._uU(36,"ngModel "),e.qZA()()(),e.TgZ(37,"form",7)(38,"div",3)(39,"div",8)(40,"div")(41,"small")(42,"em"),e._uU(43,"Attributes: isReadOnly."),e.qZA()()(),e.TgZ(44,"gln-checkbox",9),e._uU(45,"Read Only "),e.qZA()(),e.TgZ(46,"div",8)(47,"div")(48,"small")(49,"em"),e._uU(50,"Attributes: isDisabled."),e.qZA()()(),e.TgZ(51,"gln-checkbox",10),e._uU(52,"Disabled "),e.qZA()(),e.TgZ(53,"div",8)(54,"div")(55,"small")(56,"em"),e._uU(57,"Indeterminate."),e.qZA()()(),e.TgZ(58,"gln-checkbox",11),e._uU(59,"Indeterminate "),e.qZA()()()(),e.TgZ(60,"section",0)(61,"mat-accordion")(62,"mat-expansion-panel")(63,"mat-expansion-panel-header")(64,"mat-panel-title"),e._uU(65),e.qZA()(),e.TgZ(66,"mat-tab-group",12)(67,"mat-tab",13)(68,"code")(69,"pre",14),e._uU(70,'<div class="app-group">\n\n  <div class="app-elem ">\n    <div>\n      <small>\n        <em>Attributes: id, isChecked. Value='),e.TgZ(71,"b"),e._uU(72,"{"),e.qZA(),e._uU(73,'{ data02a }}</em>\n      </small>\n    </div>\n    <gln-checkbox id="unique_id_checkbox02a"\n      (change)="data02a=$event.checked"\n      [isChecked]="data02a">Checked\n    </gln-checkbox>\n  </div>\n\n  <div class="app-elem">\n    <div>\n      <small>\n        <em>Attributes: [(ngModel)]. Value='),e.TgZ(74,"b"),e._uU(75,"{"),e.qZA(),e._uU(76,'{ data02b }}</em>\n      </small>\n    </div>\n    <gln-checkbox [(ngModel)]="data02b">ngModel\n    </gln-checkbox>\n  </div>\n\n</div>\n\n<form [formGroup]="formGroup02a"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n\n    <div class="app-elem cbat1-elem">\n      <div>\n        <small><em>Attributes: isReadOnly.</em></small>\n      </div>\n      <gln-checkbox formControlName="model02a"\n        isReadOnly>Read Only\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat1-elem">\n      <div>\n        <small><em>Attributes: isDisabled.</em></small>\n      </div>\n      <gln-checkbox formControlName="model02b"\n        isDisabled>Disabled\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat1-elem">\n      <div>\n        <small><em>Indeterminate.</em></small>\n      </div>\n      <gln-checkbox formControlName="model02c"\n        isIndeterm>Indeterminate\n      </gln-checkbox>\n    </div>\n\n  </div>\n</form>'),e.qZA()()(),e.TgZ(77,"mat-tab",13)(78,"code")(79,"pre",15),e._uU(80,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent {\n  public data02a = true;\n  public data02b = true;\n  public formGroup02a: FormGroup = new FormGroup({\n    model02a: new FormControl(true, []),\n    model02b: new FormControl(true, []),\n    model02c: new FormControl(true, []),\n  });\n}"),e.qZA()()(),e.TgZ(81,"mat-tab",13)(82,"code")(83,"pre",16),e._uU(84,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n  .cbat1-elem {\n    min-width: 19ch;\n  }\n}"),e.qZA()()()()()()(),e._UZ(85,"hr",17),e.TgZ(86,"section",18)(87,"h4",1),e._uU(88," Attributes are also supported 2: "),e.TgZ(89,"a",2),e._uU(90,"#"),e.qZA()(),e.TgZ(91,"ul")(92,"li"),e._uU(93,'"isNoHover" - disables the display of additional background on hover (isNoHover);'),e.qZA(),e.TgZ(94,"li"),e._uU(95,'"isNoRipple" - disables the execution of the ripple effect (isNoRipple);'),e.qZA(),e.TgZ(96,"li"),e._uU(97,'"isRequired" - a sign that the field is required (isRequired);'),e.qZA()()(),e.TgZ(98,"form",7)(99,"div",3)(100,"div",19)(101,"div")(102,"small")(103,"em"),e._uU(104,"Attributes: isNoHover."),e.qZA()()(),e.TgZ(105,"gln-checkbox",20),e._uU(106,"No hover "),e.qZA()(),e.TgZ(107,"div",19)(108,"div")(109,"small")(110,"em"),e._uU(111,"Attributes: isNoRipple."),e.qZA()()(),e.TgZ(112,"gln-checkbox",21),e._uU(113,"No ripple "),e.qZA()(),e.TgZ(114,"div",19)(115,"div")(116,"small")(117,"em"),e._uU(118," Attributes: isRequired "),e.qZA()()(),e.TgZ(119,"gln-checkbox",22)(120,"span",23),e._uU(121),e.ALo(122,"json"),e.qZA()()()()(),e.TgZ(123,"section",0)(124,"mat-accordion")(125,"mat-expansion-panel")(126,"mat-expansion-panel-header")(127,"mat-panel-title"),e._uU(128),e.qZA()(),e.TgZ(129,"mat-tab-group",12)(130,"mat-tab",13)(131,"code")(132,"pre",14),e._uU(133,'<form [formGroup]="formGroup02d"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n\n    <div class="app-elem cbat2-elem">\n      <div>\n        <small><em>Attributes: isNoHover.</em></small>\n      </div>\n      <gln-checkbox formControlName="model02d"\n        isNoHover>No hover and ripple\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat2-elem">\n      <div>\n        <small><em>Attributes: isNoRipple.</em></small>\n      </div>\n      <gln-checkbox formControlName="model02e"\n        isNoRipple>No animation and ripple\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat2-elem">\n      <div>\n        <small>\n          <em>\n            Attributes: isRequired\n          </em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model02f"\n        isRequired>\n        <span [ngClass]="{ \'cbat2-err\': control02d.model02f.errors }">\n          isRequired errors='),e.TgZ(134,"b"),e._uU(135,"{"),e.qZA(),e._uU(136,"{ control02d.model02f.errors | json }}\n        </span>\n      </gln-checkbox>\n    </div>\n\n  </div>\n</form>"),e.qZA()()(),e.TgZ(137,"mat-tab",13)(138,"code")(139,"pre",15),e._uU(140,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent {\n  public control02d = {\n    model02d: new FormControl(true, []),\n    model02e: new FormControl(true, []),\n    model02f: new FormControl(null, []),\n  };\n  public formGroup02d: FormGroup = new FormGroup(this.control02d);\n}"),e.qZA()()(),e.TgZ(141,"mat-tab",13)(142,"code")(143,"pre",16),e._uU(144,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n  .cbat2-elem {\n    min-width: 19ch;\n  }\n  .cbat2-err {\n    color: red;\n  }\n}"),e.qZA()()()()()()(),e._UZ(145,"hr",17),e.TgZ(146,"section",24)(147,"h4",1),e._uU(148," Position. "),e.TgZ(149,"a",2),e._uU(150,"#"),e.qZA()(),e.TgZ(151,"p"),e._uU(152," It is possible to change the position of the label relative to the GlnCheckbox component. "),e.qZA()(),e.TgZ(153,"form",7)(154,"div",3)(155,"div",25)(156,"div")(157,"small")(158,"em"),e._uU(159,"Attributes: position - top."),e.qZA()()(),e.TgZ(160,"gln-checkbox",26),e._uU(161,"Position - top "),e.qZA()(),e.TgZ(162,"div",25)(163,"div")(164,"small")(165,"em"),e._uU(166,"Attributes: position - bottom."),e.qZA()()(),e.TgZ(167,"gln-checkbox",27),e._uU(168,"Position - bottom "),e.qZA()(),e.TgZ(169,"div",25)(170,"div")(171,"small")(172,"em"),e._uU(173,"Attributes: position - start."),e.qZA()()(),e.TgZ(174,"gln-checkbox",28),e._uU(175,"Position - start "),e.qZA()(),e.TgZ(176,"div",25)(177,"div")(178,"small")(179,"em"),e._uU(180,"Attributes: position - end."),e.qZA()()(),e.TgZ(181,"gln-checkbox",29),e._uU(182,"Position - end "),e.qZA()()()(),e.TgZ(183,"section",0)(184,"mat-accordion")(185,"mat-expansion-panel")(186,"mat-expansion-panel-header")(187,"mat-panel-title"),e._uU(188),e.qZA()(),e.TgZ(189,"mat-tab-group",12)(190,"mat-tab",13)(191,"code")(192,"pre",14),e._uU(193,'<form [formGroup]="formGroup02h"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n\n    <div class="app-elem cbat3-elem">\n      <div>\n        <small>\n          <em>Attributes: position - top.</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model02h"\n        position="top">Position - top\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat3-elem">\n      <div>\n        <small>\n          <em>Attributes: position - bottom.</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model02i"\n        position="bottom">Position - bottom\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat3-elem">\n      <div>\n        <small>\n          <em>Attributes: position - start.</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model02j"\n        position="start">Position - start\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem cbat3-elem">\n      <div>\n        <small>\n          <em>Attributes: position - end.</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model02k"\n        position="end">Position - end\n      </gln-checkbox>\n    </div>\n\n  </div>\n</form>'),e.qZA()()(),e.TgZ(194,"mat-tab",13)(195,"code")(196,"pre",15),e._uU(197,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent {\n  public formGroup02h: FormGroup = new FormGroup({\n    model02h: new FormControl(true, []),\n    model02i: new FormControl(false, []),\n    model02j: new FormControl(true, []),\n    model02k: new FormControl(false, []),\n  });\n}"),e.qZA()()(),e.TgZ(198,"mat-tab",13)(199,"code")(200,"pre",16),e._uU(201,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n  .cbat3-elem {\n    min-width: 19ch;\n  }\n}"),e.qZA()()()()()()(),e._UZ(202,"hr",17)),2&l&&(e.xp6(3),e.Q6J("href",o.urlCmCheckbox+"#Attributes",e.LSH),e.xp6(9),e.Q6J("href",o.urlCmCheckbox+"#config-interface",e.LSH),e.xp6(15),e.hij("Attributes: id, isChecked. Value=",o.data02a,""),e.xp6(1),e.Q6J("isChecked",o.data02a),e.xp6(6),e.hij("Attributes: [(ngModel)]. Value=",o.data02b,""),e.xp6(1),e.Q6J("ngModel",o.data02b),e.xp6(2),e.Q6J("formGroup",o.formGroup02a),e.xp6(28),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(10),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss),e.xp6(8),e.Q6J("href",o.urlCmCheckbox+"#attributes-supported02",e.LSH),e.xp6(9),e.Q6J("formGroup",o.formGroup02d),e.xp6(22),e.Q6J("ngClass",e.VKq(27,x,o.control02d.model02f.errors)),e.xp6(1),e.hij(" isRequired errors=",e.lcZ(122,25,o.control02d.model02f.errors)," "),e.xp6(7),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(7),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss),e.xp6(8),e.Q6J("href",o.urlCmCheckbox+"#attributes-position",e.LSH),e.xp6(4),e.Q6J("formGroup",o.formGroup02h),e.xp6(35),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(4),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss))},dependencies:[d.mk,t._Y,t.JJ,t.JL,t.On,t.sg,t.u,i.pp,i.ib,i.yz,i.yK,u.SP,u.uX,c.Tz,d.Ts],styles:["app-cm-checkbox-attributes{display:block}app-cm-checkbox-attributes .cbat1-elem{min-width:19ch}app-cm-checkbox-attributes .cbat2-elem{min-width:19ch}app-cm-checkbox-attributes .cbat2-err{color:red}app-cm-checkbox-attributes .cbat3-elem{min-width:17ch}\n"],encapsulation:2,changeDetection:0}),n})(),q=(()=>{class n{constructor(){this.labelShowSource=r.sx,this.labelHtml=r.zC,this.labelTs=r.QS,this.labelCss=r.Er,this.urlCmCheckbox="/"+m.g.get("URL_COMPONENTS")+"/"+m.g.get("URL_COMPONENTS_CHECKBOX"),this.formGroup03=new t.cw({model03a:new t.NI(!0,[]),model03b:new t.NI(!0,[]),model03c:new t.NI(!0,[]),model03d:new t.NI(!0,[]),model03e:new t.NI(!0,[]),model03f:new t.NI(!0,[]),model03g:new t.NI(!0,[]),model03h:new t.NI(!0,[]),model03i:new t.NI(!0,[])})}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox-size"]],inputs:{labelShowSource:"labelShowSource",labelHtml:"labelHtml",labelTs:"labelTs",labelCss:"labelCss"},decls:94,vars:6,consts:[["mr-vr",""],[1,"app-hover-link"],[3,"href"],["novalidate","","autocomplete","off",3,"formGroup"],[1,"app-group"],[1,"app-elem"],["formControlName","model03a","size","little"],["formControlName","model03b","size","short"],["formControlName","model03c","size","small"],["formControlName","model03d","size","middle"],["formControlName","model03e","size","wide"],["formControlName","model03f","size","large"],["formControlName","model03g","size","huge"],["formControlName","model03h","size","53"],["animationDuration","0ms"],[3,"label"],["source","html"],["source","ts"],["source","css"],["br-nn",""]],template:function(l,o){1&l&&(e.TgZ(0,"section",0)(1,"h3",1),e._uU(2," Size. "),e.TgZ(3,"a",2),e._uU(4,"#"),e.qZA()(),e.TgZ(5,"p"),e._uU(6," The GlnCheckbox component has the ability to change its size. All component elements are associated with a font size for the gln-checkbox tag. Thus, by changing the font size, you can choose the size of this component that is optimal for you. "),e.qZA(),e.TgZ(7,"span"),e._uU(8,"For example:"),e.qZA()(),e.TgZ(9,"form",3)(10,"div",4)(11,"div",5)(12,"div")(13,"small")(14,"em"),e._uU(15,'"Little" height: 30px;'),e.qZA()()(),e.TgZ(16,"gln-checkbox",6),e._uU(17," Parameter definition label "),e.qZA()()(),e.TgZ(18,"div",4)(19,"div",5)(20,"div")(21,"small")(22,"em"),e._uU(23,'"Short" height: 36px;'),e.qZA()()(),e.TgZ(24,"gln-checkbox",7),e._uU(25," Parameter definition label "),e.qZA()()(),e.TgZ(26,"div",4)(27,"div",5)(28,"div")(29,"small")(30,"em"),e._uU(31,'"Small" height: 42px;'),e.qZA()()(),e.TgZ(32,"gln-checkbox",8),e._uU(33," Parameter definition label "),e.qZA()()(),e.TgZ(34,"div",4)(35,"div",5)(36,"div")(37,"small")(38,"em"),e._uU(39,'"Middle" height: 48px;'),e.qZA()()(),e.TgZ(40,"gln-checkbox",9),e._uU(41," Parameter definition label "),e.qZA()()(),e.TgZ(42,"div",4)(43,"div",5)(44,"div")(45,"small")(46,"em"),e._uU(47,'"Wide" height: 54px;'),e.qZA()()(),e.TgZ(48,"gln-checkbox",10),e._uU(49," Parameter definition label "),e.qZA()()(),e.TgZ(50,"div",4)(51,"div",5)(52,"div")(53,"small")(54,"em"),e._uU(55,'"Large" height: 60px;'),e.qZA()()(),e.TgZ(56,"gln-checkbox",11),e._uU(57," Parameter definition label "),e.qZA()()(),e.TgZ(58,"div",4)(59,"div",5)(60,"div")(61,"small")(62,"em"),e._uU(63,'"Huge" height: 66px;'),e.qZA()()(),e.TgZ(64,"gln-checkbox",12),e._uU(65," Parameter definition label "),e.qZA()()(),e.TgZ(66,"div",4)(67,"div",5)(68,"div")(69,"small")(70,"em"),e._uU(71,'"Custom" height: 53px;'),e.qZA()()(),e.TgZ(72,"gln-checkbox",13),e._uU(73," Parameter definition label "),e.qZA()()()(),e.TgZ(74,"section",0)(75,"mat-accordion")(76,"mat-expansion-panel")(77,"mat-expansion-panel-header")(78,"mat-panel-title"),e._uU(79),e.qZA()(),e.TgZ(80,"mat-tab-group",14)(81,"mat-tab",15)(82,"code")(83,"pre",16),e._uU(84,'<form [formGroup]="formGroup03"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Little" height: 30px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03a"\n        size="little">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Short" height: 36px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03b"\n        size="short">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Small" height: 42px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03c"\n        size="small">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Middle" height: 48px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03d"\n        size="middle">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Wide" height: 54px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03e"\n        size="wide">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Large" height: 60px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03f"\n        size="large">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Huge" height: 66px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03g"\n        size="huge">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n  <div class="app-group">\n    <div class="app-elem">\n      <div>\n        <small><em>"Custom" height: 53px;</em></small>\n      </div>\n      <gln-checkbox formControlName="model03h"\n        size="53">\n        Parameter definition label\n      </gln-checkbox>\n    </div>\n  </div>\n\n</form>'),e.qZA()()(),e.TgZ(85,"mat-tab",15)(86,"code")(87,"pre",17),e._uU(88,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent {\n  public formGroup03: FormGroup = new FormGroup({\n    model03a: new FormControl(true, []),\n    model03b: new FormControl(true, []),\n    model03c: new FormControl(true, []),\n    model03d: new FormControl(true, []),\n    model03e: new FormControl(true, []),\n    model03f: new FormControl(true, []),\n    model03g: new FormControl(true, []),\n    model03h: new FormControl(true, []),\n  });\n}"),e.qZA()()(),e.TgZ(89,"mat-tab",15)(90,"code")(91,"pre",18),e._uU(92,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n}"),e.qZA()()()()()()(),e._UZ(93,"hr",19)),2&l&&(e.xp6(3),e.Q6J("href",o.urlCmCheckbox+"#Size",e.LSH),e.xp6(6),e.Q6J("formGroup",o.formGroup03),e.xp6(70),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(4),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss))},dependencies:[t._Y,t.JJ,t.JL,t.sg,t.u,i.pp,i.ib,i.yz,i.yK,u.SP,u.uX,c.Tz],styles:["app-cm-checkbox-size{display:block}\n"],encapsulation:2,changeDetection:0}),n})();const w={isNoRipple:!0,position:"start"};let N=(()=>{class n{constructor(){this.labelShowSource=r.sx,this.labelHtml=r.zC,this.labelTs=r.QS,this.labelCss=r.Er,this.urlCmCheckbox="/"+m.g.get("URL_COMPONENTS")+"/"+m.g.get("URL_COMPONENTS_CHECKBOX"),this.formGroup08=new t.cw({model08a:new t.NI(!0,[]),model08b:new t.NI(!0,[])})}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox-config"]],inputs:{labelShowSource:"labelShowSource",labelHtml:"labelHtml",labelTs:"labelTs",labelCss:"labelCss"},features:[e._Bn([{provide:c.RE,useValue:w}])],decls:223,vars:9,consts:[["mr-vr",""],[1,"app-hover-link"],[3,"href"],["source","ts"],["mr-vr","","id","config-interface"],[1,"app-tab"],[1,"app-mn-wd-22ch"],["mr-vr","","id","config-provide"],["mr-vr","","id","config-params"],["source","html"],["novalidate","","autocomplete","off",3,"formGroup"],[1,"app-group"],[1,"app-elem"],["formControlName","model08a"],["formControlName","model08b","isNoRipple","false","position","end"],["animationDuration","0ms"],[3,"label"],["source","css"],["br-nn",""]],template:function(l,o){1&l&&(e.TgZ(0,"section",0)(1,"h3",1),e._uU(2," Config. "),e.TgZ(3,"a",2),e._uU(4,"#"),e.qZA()(),e.TgZ(5,"p"),e._uU(6," If your application will have a single style for GlnCheckbox elements, then you can set a single configuration. To do this, you need to create an object with the GlnCheckboxConfig interface and define the required values. Next, specify the resulting object in the list of providers for the entire application (at the level of the AppComponent). "),e.qZA(),e.TgZ(7,"code")(8,"pre",3),e._uU(9,"import {\n  GlnCheckboxConfig, GLN_CHECKBOX_CONFIG\n} from 'gelenium-ui';\n\nconst glnCheckboxConfigDefault: GlnCheckboxConfig = {\n  isNoRipple: true,\n  position: 'start',\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [\n    { provide: GLN_CHECKBOX_CONFIG, useValue: glnCheckboxConfigDefault }\n  ],\n})\nexport class AppComponent {\n  title = 'demo';\n}"),e.qZA()(),e.TgZ(10,"p"),e._uU(11,' After that, all input elements based on the "GlnCheckbox" component will have the same configuration. '),e.qZA()(),e.TgZ(12,"section",4)(13,"h4",1),e._uU(14," GlnCheckboxConfig interface. "),e.TgZ(15,"a",2),e._uU(16,"#"),e.qZA()()(),e.TgZ(17,"table",5)(18,"thead")(19,"tr")(20,"th",6),e._uU(21,"Name"),e.qZA(),e.TgZ(22,"th"),e._uU(23,"Description"),e.qZA()()(),e.TgZ(24,"tbody")(25,"tr")(26,"td")(27,"code"),e._uU(28,"isNoHover?: boolean"),e._UZ(29,"br"),e._uU(30," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(31,"td")(32,"span"),e._uU(33," Disable highlighting of the element area on hover. (default = false;) "),e.qZA(),e._UZ(34,"br"),e.TgZ(35,"span"),e._uU(36,"(optional)"),e.qZA()()(),e.TgZ(37,"tr")(38,"td")(39,"code"),e._uU(40,"isNoRipple?: boolean"),e._UZ(41,"br"),e._uU(42," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(43,"td")(44,"span"),e._uU(45," This property to turn off the ripple effect. "),e._UZ(46,"br"),e._uU(47,"(default = false;) "),e.qZA(),e._UZ(48,"br"),e.TgZ(49,"span"),e._uU(50,"(optional)"),e.qZA()()(),e.TgZ(51,"tr")(52,"td")(53,"code"),e._uU(54,"isReadOnly?: boolean"),e._UZ(55,"br"),e._uU(56," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(57,"td")(58,"span"),e._uU(59," This property makes the element read-only. "),e._UZ(60,"br"),e._uU(61,"(default = false;) "),e.qZA(),e._UZ(62,"br"),e.TgZ(63,"span"),e._uU(64,"(optional)"),e.qZA()()(),e.TgZ(65,"tr")(66,"td")(67,"code"),e._uU(68,"isRequired?: boolean"),e._UZ(69,"br"),e._uU(70," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(71,"td")(72,"span"),e._uU(73," This property adds a condition: required field. "),e._UZ(74,"br"),e._uU(75,"(default = false;) "),e.qZA(),e._UZ(76,"br"),e.TgZ(77,"span"),e._uU(78,"(optional)"),e.qZA()()(),e.TgZ(79,"tr")(80,"td")(81,"code"),e._uU(82,"position?: string"),e._UZ(83,"br"),e._uU(84," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(85,"td")(86,"span"),e._uU(87," This property defines the position of the label relative to the element. "),e._UZ(88,"br"),e._uU(89,"(default = end;) "),e.qZA(),e._UZ(90,"br"),e.TgZ(91,"span"),e._uU(92,"(optional)"),e.qZA(),e.TgZ(93,"span"),e._uU(94,"Possible values:"),e.qZA(),e.TgZ(95,"ul")(96,"li"),e._uU(97,'"top" - the label is on the top;'),e.qZA(),e.TgZ(98,"li"),e._uU(99,'"bottom" - the label is on the bottom;'),e.qZA(),e.TgZ(100,"li"),e._uU(101,'"start" - the label is on the right;'),e.qZA(),e.TgZ(102,"li"),e._uU(103,'"end" - the label is on the left;'),e.qZA()()()(),e.TgZ(104,"tr")(105,"td")(106,"code"),e._uU(107,"@Input()"),e.qZA(),e.TgZ(108,"code"),e._uU(109,"size: number"),e._UZ(110,"br"),e._uU(111," \xa0\xa0| string"),e._UZ(112,"br"),e._uU(113," \xa0\xa0| undefined;"),e._UZ(114,"br"),e.qZA()(),e.TgZ(115,"td")(116,"span"),e._uU(117,"Determines the size of the element."),e._UZ(118,"br"),e._uU(119," It can take the following values: "),e.qZA(),e.TgZ(120,"ul")(121,"li"),e._uU(122,'"little" - height: 30px;'),e.qZA(),e.TgZ(123,"li"),e._uU(124,'"short" - height: 36px;'),e.qZA(),e.TgZ(125,"li"),e._uU(126,'"small" - height: 42px (default);'),e.qZA(),e.TgZ(127,"li"),e._uU(128,'"middle" - height: 48px;'),e.qZA(),e.TgZ(129,"li"),e._uU(130,'"wide" - height: 54px;'),e.qZA(),e.TgZ(131,"li"),e._uU(132,'"large" - height: 60px;'),e.qZA(),e.TgZ(133,"li"),e._uU(134,'"huge" - height: 66px;'),e.qZA()(),e.TgZ(135,"span"),e._uU(136," This property can also contain the element's height in pixels, either as a string or as a number."),e._UZ(137,"br"),e._uU(138,' The value in the units of "pixels" allow you to accurately calculate the size of internal elements.'),e._UZ(139,"br"),e._uU(140," For example: "),e.TgZ(141,"code"),e._uU(142,'size="53" or [size]="53"'),e.qZA()()()()()(),e.TgZ(143,"section",7)(144,"h4",1),e._uU(145,' 1. Configuration with "isNoRipple: true" and "position: start". '),e.TgZ(146,"a",2),e._uU(147,"#"),e.qZA()(),e.TgZ(148,"p"),e._uU(149," For example, let's prepare a configuration in which: "),e.qZA(),e.TgZ(150,"ul")(151,"li"),e._uU(152,'"isNoRipple" will have the value "true";'),e.qZA(),e.TgZ(153,"li"),e._uU(154,'"position" will have the value "start";).'),e.qZA()(),e.TgZ(155,"code")(156,"pre",3),e._uU(157,"const glnCheckboxConfigDefault: GlnCheckboxConfig = {\n  isNoRipple: true,\n  position: 'start',\n};"),e.qZA()()(),e.TgZ(158,"section",8)(159,"h4",1),e._uU(160,' 2. Parameter values: "isNoRipple=false" and "position=end". '),e.TgZ(161,"a",2),e._uU(162,"#"),e.qZA()(),e.TgZ(163,"p"),e._uU(164,' Suppose we have a provider in our application with "GlnCheckboxConfig" and all input elements accept its default values. We can change these values for an individual element. To do this, you need to specify in this element those properties that do not match the provider\'s configuration. '),e.qZA(),e.TgZ(165,"p"),e._uU(166," For example, let's specify the following parameters: "),e.qZA(),e.TgZ(167,"code")(168,"pre",9),e._uU(169,"  <gln-checkbox\n    "),e.TgZ(170,"i")(171,"strong"),e._uU(172,'isNoRipple="false"'),e.qZA()(),e._uU(173,"\n    "),e.TgZ(174,"i")(175,"strong"),e._uU(176,'position="end"'),e.qZA()(),e._uU(177,'\n    formControlName="model06b">Label\n  </gln-checkbox>'),e.qZA()(),e.TgZ(178,"p"),e._uU(179," In other words, there is the following order of determining the configuration parameters: "),e.qZA(),e.TgZ(180,"ul")(181,"li"),e._uU(182," Standard values are taken (if there is one). "),e.qZA(),e.TgZ(183,"li"),e._uU(184," Values from the default configuration provider (if there is one). "),e.qZA(),e.TgZ(185,"li"),e._uU(186," Values from input parameters (if there is one). "),e.qZA()()(),e.TgZ(187,"form",10)(188,"div",11)(189,"div",12)(190,"div")(191,"small")(192,"em"),e._uU(193,'1. Config: isNoRipple="true", position="start".'),e.qZA()()(),e.TgZ(194,"gln-checkbox",13),e._uU(195,"parameter label 1 "),e.qZA()(),e.TgZ(196,"div",12)(197,"div")(198,"small")(199,"em"),e._uU(200,'2. Parameters: isNoRipple="false", position="end".'),e.qZA()()(),e.TgZ(201,"gln-checkbox",14),e._uU(202,"parameter label 2 "),e.qZA()()()(),e.TgZ(203,"section",0)(204,"mat-accordion")(205,"mat-expansion-panel")(206,"mat-expansion-panel-header")(207,"mat-panel-title"),e._uU(208),e.qZA()(),e.TgZ(209,"mat-tab-group",15)(210,"mat-tab",16)(211,"code")(212,"pre",9),e._uU(213,'<form [formGroup]="formGroup08"\n  novalidate\n  autocomplete="off">\n\n  <div class="app-group">\n\n    <div class="app-elem">\n      <div>\n        <small>\n          <em>1. Config: isNoRipple="true", position="start".</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model08a">parameter label 1\n      </gln-checkbox>\n    </div>\n\n    <div class="app-elem">\n      <div>\n        <small>\n          <em>2. Parameters: isNoRipple="false", position="end".</em>\n        </small>\n      </div>\n      <gln-checkbox formControlName="model08b"\n        isNoRipple="false"\n        position="end">parameter label 2\n      </gln-checkbox>\n    </div>\n\n  </div>\n\n</form>'),e.qZA()()(),e.TgZ(214,"mat-tab",16)(215,"code")(216,"pre",3),e._uU(217,"import {\n  Component, ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormControl, FormGroup\n} from '@angular/forms';\n\nimport {\n  GlnCheckboxConfig, GLN_CHECKBOX_CONFIG\n} from 'gelenium-ui';\n\nconst glnCheckboxConfigDefault: GlnCheckboxConfig = {\n  isNoRipple: true,\n  position: 'start',\n};\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [{\n    provide: GLN_CHECKBOX_CONFIG, useValue: glnCheckboxConfigDefault\n  }],\n})\nexport class CheckboxComponent {\n  public formGroup06: FormGroup = new FormGroup({\n    model06a: new FormControl(true, []),\n    model06b: new FormControl(true, []),\n  });\n}"),e.qZA()()(),e.TgZ(218,"mat-tab",16)(219,"code")(220,"pre",17),e._uU(221,"app-checkbox {\n  .app-group {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .app-elem {\n    min-width: 26ch;\n    margin: 10px 10px;\n  }\n}"),e.qZA()()()()()()(),e._UZ(222,"hr",18)),2&l&&(e.xp6(3),e.Q6J("href",o.urlCmCheckbox+"#Config",e.LSH),e.xp6(12),e.Q6J("href",o.urlCmCheckbox+"#config-interface",e.LSH),e.xp6(131),e.Q6J("href",o.urlCmCheckbox+"#config-provide",e.LSH),e.xp6(15),e.Q6J("href",o.urlCmCheckbox+"#config-params",e.LSH),e.xp6(26),e.Q6J("formGroup",o.formGroup08),e.xp6(21),e.Oqu(o.labelShowSource),e.xp6(2),e.Q6J("label",o.labelHtml),e.xp6(4),e.Q6J("label",o.labelTs),e.xp6(4),e.Q6J("label",o.labelCss))},dependencies:[t._Y,t.JJ,t.JL,t.sg,t.u,i.pp,i.ib,i.yz,i.yK,u.SP,u.uX,c.Tz],styles:["app-cm-checkbox-config{display:block}\n"],encapsulation:2,changeDetection:0}),n})(),y=(()=>{class n{constructor(){this.urlCmCheckbox="/"+m.g.get("URL_COMPONENTS")+"/"+m.g.get("URL_COMPONENTS_CHECKBOX")}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox-api"]],decls:566,vars:5,consts:[["mr-vr",""],[1,"app-hover-link"],[3,"href"],["fw500",""],["mr-vr","","id","api-properties"],[1,"app-tab"],[1,"app-mn-wd-22ch"],["mr-vr","","id","api-methods"],["colspan","2"],["br-nn",""],["mr-vr","","id","api-css-variables-optional"],["ubr",""]],template:function(l,o){1&l&&(e.TgZ(0,"section",0)(1,"h3",1),e._uU(2," API: GlnCheckbox. "),e.TgZ(3,"a",2),e._uU(4,"#"),e.qZA()(),e.TgZ(5,"p"),e._uU(6," Selector: "),e.TgZ(7,"span",3),e._uU(8,"gln-checkbox"),e.qZA()(),e.TgZ(9,"p"),e._uU(10," Exported as: "),e.TgZ(11,"span",3),e._uU(12,"glnCheckbox"),e.qZA()()(),e.TgZ(13,"section",4)(14,"h4",1),e._uU(15," Properties. "),e.TgZ(16,"a",2),e._uU(17,"#"),e.qZA()()(),e.TgZ(18,"table",5)(19,"thead")(20,"tr")(21,"th",6),e._uU(22,"Name"),e.qZA(),e.TgZ(23,"th"),e._uU(24,"Description"),e.qZA()()(),e.TgZ(25,"tbody")(26,"tr")(27,"td")(28,"code"),e._uU(29,"@Input()"),e.qZA(),e.TgZ(30,"code"),e._uU(31,"id: string;"),e.qZA()(),e.TgZ(32,"td")(33,"span"),e._uU(34," ID of the native element. "),e._UZ(35,"br"),e._uU(36,"(default = `glncb-${uniqueIdCounter++}`;) "),e.qZA()()(),e.TgZ(37,"tr")(38,"td")(39,"code"),e._uU(40,"@Input()"),e.qZA(),e.TgZ(41,"code"),e._uU(42,"config: GlnCheckboxConfig"),e._UZ(43,"br"),e._uU(44," \xa0\xa0| null"),e._UZ(45,"br"),e._uU(46," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(47,"td")(48,"span"),e._uU(49,"Defines a configuration object."),e.qZA(),e._UZ(50,"br"),e.TgZ(51,"a",2),e._uU(52,"More details."),e.qZA()()(),e.TgZ(53,"tr")(54,"td")(55,"code"),e._uU(56,"@Input()"),e.qZA(),e.TgZ(57,"code"),e._uU(58,"isChecked: string"),e._UZ(59,"br"),e._uU(60," \xa0\xa0| boolean"),e._UZ(61,"br"),e._uU(62," \xa0\xa0| null"),e._UZ(63,"br"),e._uU(64," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(65,"td")(66,"span"),e._uU(67," This property only sets the initial value of the element. If an empty attribute is specified, then the initial value will be true. "),e._UZ(68,"br"),e._uU(69,"Attribute (no content). "),e.qZA()()(),e.TgZ(70,"tr")(71,"td")(72,"code"),e._uU(73,"@Input()"),e.qZA(),e.TgZ(74,"code"),e._uU(75,"isDisabled: string"),e._UZ(76,"br"),e._uU(77," \xa0\xa0| boolean"),e._UZ(78,"br"),e._uU(79," \xa0\xa0| null"),e._UZ(80,"br"),e._uU(81," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(82,"td")(83,"span"),e._uU(84,"The element is disabled."),e._UZ(85,"br"),e._uU(86,"Attribute (no content)."),e.qZA()()(),e.TgZ(87,"tr")(88,"td")(89,"code"),e._uU(90,"@Input()"),e.qZA(),e.TgZ(91,"code"),e._uU(92,"isIndeterm: string"),e._UZ(93,"br"),e._uU(94," \xa0\xa0| boolean"),e._UZ(95,"br"),e._uU(96," \xa0\xa0| null"),e._UZ(97,"br"),e._uU(98," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(99,"td")(100,"span"),e._uU(101,' This property sets the state to "indeterminate". Changing by clicking or calling "toggle()" cancels this state. '),e._UZ(102,"br"),e._uU(103,"Attribute (no content). "),e.qZA()()(),e.TgZ(104,"tr")(105,"td")(106,"code"),e._uU(107,"isNoHover?: boolean"),e._UZ(108,"br"),e._uU(109," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(110,"td")(111,"span"),e._uU(112," Disable highlighting of the element area on hover. "),e.qZA(),e._UZ(113,"br"),e._uU(114,"Attribute (no content). "),e.qZA()(),e.TgZ(115,"tr")(116,"td")(117,"code"),e._uU(118,"@Input()"),e.qZA(),e.TgZ(119,"code"),e._uU(120,"isNoRipple: string"),e._UZ(121,"br"),e._uU(122," \xa0\xa0| boolean"),e._UZ(123,"br"),e._uU(124," \xa0\xa0| null"),e._UZ(125,"br"),e._uU(126," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(127,"td")(128,"span"),e._uU(129," Flag for disabling the ripple effect."),e._UZ(130,"br"),e._uU(131," Attribute (no content). "),e.qZA(),e._UZ(132,"br"),e.qZA()(),e.TgZ(133,"tr")(134,"td")(135,"code"),e._uU(136,"@Input()"),e.qZA(),e.TgZ(137,"code"),e._uU(138,"isReadOnly: string"),e._UZ(139,"br"),e._uU(140," \xa0\xa0| boolean"),e._UZ(141,"br"),e._uU(142," \xa0\xa0| null"),e._UZ(143,"br"),e._uU(144," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(145,"td")(146,"span"),e._uU(147," Indicates that the element is read-only."),e._UZ(148,"br"),e._uU(149," (default = false;) Attribute (no content). "),e.qZA()()(),e.TgZ(150,"tr")(151,"td")(152,"code"),e._uU(153,"@Input()"),e.qZA(),e.TgZ(154,"code"),e._uU(155,"isRequired: string"),e._UZ(156,"br"),e._uU(157," \xa0\xa0| boolean"),e._UZ(158,"br"),e._uU(159," \xa0\xa0| null"),e._UZ(160,"br"),e._uU(161," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(162,"td")(163,"span"),e._uU(164," Indicates that the field is required."),e._UZ(165,"br"),e._uU(166," (default = false;) Attribute (no content). "),e.qZA()()(),e.TgZ(167,"tr")(168,"td")(169,"code"),e._uU(170,"@Input()"),e.qZA(),e.TgZ(171,"code"),e._uU(172,"position: string"),e._UZ(173,"br"),e._uU(174," \xa0\xa0| null"),e._UZ(175,"br"),e._uU(176," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(177,"td")(178,"span"),e._uU(179," Specifies the position of the label relative to the element. It can take the following values: "),e.qZA(),e.TgZ(180,"ul")(181,"li"),e._uU(182,'"top" - the label is on the top;'),e.qZA(),e.TgZ(183,"li"),e._uU(184,'"bottom" - the label is on the bottom;'),e.qZA(),e.TgZ(185,"li"),e._uU(186,'"start" - the label is on the right;'),e.qZA(),e.TgZ(187,"li"),e._uU(188,'"end" - the label is on the left;'),e.qZA()()()(),e.TgZ(189,"tr")(190,"td")(191,"code"),e._uU(192,"@Input()"),e.qZA(),e.TgZ(193,"code"),e._uU(194,"size: number"),e._UZ(195,"br"),e._uU(196," \xa0\xa0| string"),e._UZ(197,"br"),e._uU(198," \xa0\xa0| null"),e._UZ(199,"br"),e._uU(200," \xa0\xa0| undefined;"),e.qZA()(),e.TgZ(201,"td")(202,"span"),e._uU(203,"Determines the size of the element."),e._UZ(204,"br"),e._uU(205," It can take the following values: "),e.qZA(),e.TgZ(206,"ul")(207,"li"),e._uU(208,'"little" - height: 30px;'),e.qZA(),e.TgZ(209,"li"),e._uU(210,'"short" - height: 36px;'),e.qZA(),e.TgZ(211,"li"),e._uU(212,'"small" - height: 42px (default);'),e.qZA(),e.TgZ(213,"li"),e._uU(214,'"middle" - height: 48px;'),e.qZA(),e.TgZ(215,"li"),e._uU(216,'"wide" - height: 54px;'),e.qZA(),e.TgZ(217,"li"),e._uU(218,'"large" - height: 60px;'),e.qZA(),e.TgZ(219,"li"),e._uU(220,'"huge" - height: 66px;'),e.qZA()(),e.TgZ(221,"span"),e._uU(222," This property can also contain the element's height in pixels, either as a string or as a number."),e._UZ(223,"br"),e._uU(224,' The value in the units of "pixels" allow you to accurately calculate the size of internal elements.'),e._UZ(225,"br"),e._uU(226," For example: "),e.TgZ(227,"code"),e._uU(228,'size="53" or [size]="53"'),e.qZA()()()(),e.TgZ(229,"tr")(230,"td")(231,"code"),e._uU(232,"@Input()"),e.qZA(),e.TgZ(233,"code"),e._uU(234,"tabIndex: number;"),e.qZA()(),e.TgZ(235,"td")(236,"span"),e._uU(237,"Indicates that its element can be focused. "),e._UZ(238,"br"),e._uU(239,"(default = 0;) "),e.qZA()()(),e.TgZ(240,"tr")(241,"td")(242,"code"),e._uU(243,"@Output()"),e.qZA(),e.TgZ(244,"code"),e._uU(245,"focused: EventEmitter<void>;"),e.qZA()(),e.TgZ(246,"td")(247,"span"),e._uU(248,"Fires when the element receives input focus."),e.qZA()()(),e.TgZ(249,"tr")(250,"td")(251,"code"),e._uU(252,"@Output()"),e.qZA(),e.TgZ(253,"code"),e._uU(254,"blured: EventEmitter<void>;"),e.qZA()(),e.TgZ(255,"td")(256,"span"),e._uU(257,"Fires when an element loses input focus."),e.qZA()()(),e.TgZ(258,"tr")(259,"td")(260,"code"),e._uU(261,"@Output()"),e.qZA(),e.TgZ(262,"code"),e._uU(263,"change: EventEmitter<{"),e._UZ(264,"br"),e._uU(265," \xa0checked: newValue,"),e._UZ(266,"br"),e._uU(267," \xa0source:"),e._UZ(268,"br"),e._uU(269," \xa0\xa0GlnCheckboxComponent"),e._UZ(270,"br"),e._uU(271," }>; "),e.qZA()(),e.TgZ(272,"td")(273,"span"),e._uU(274," Fires when an element is checked/unchecked."),e._UZ(275,"br"),e._uU(276,' The "change" parameter contains a reference to the current element. '),e.qZA()()(),e.TgZ(277,"tr")(278,"td")(279,"code"),e._uU(280,"@Output()"),e.qZA(),e.TgZ(281,"code"),e._uU(282,"indetermChange:"),e._UZ(283,"br"),e._uU(284," EventEmitter<boolean>;"),e.qZA()(),e.TgZ(285,"td")(286,"span"),e._uU(287,' Fires when an element enters (leaves) the "indeterminate" state. '),e.qZA()()()()(),e.TgZ(288,"section",7)(289,"h4",1),e._uU(290," Methods "),e.TgZ(291,"a",2),e._uU(292,"#"),e.qZA()()(),e.TgZ(293,"table",5)(294,"thead")(295,"th",8)(296,"span",3),e._uU(297,"focus(): void;"),e.qZA()()(),e.TgZ(298,"tbody")(299,"tr",8)(300,"td"),e._uU(301," This element is given input focus. "),e.qZA()()()(),e._UZ(302,"hr",9),e.TgZ(303,"table",5)(304,"thead")(305,"th",8)(306,"span",3),e._uU(307,"toggle(): void;"),e.qZA()()(),e.TgZ(308,"tbody")(309,"tr",8)(310,"td"),e._uU(311,' Toggles an element in the "checked" or "unchecked" state. '),e.qZA()()()(),e._UZ(312,"hr",9),e.TgZ(313,"table",5)(314,"thead")(315,"th",8)(316,"span",3),e._uU(317,"getIndeterm(): boolean;"),e.qZA()()(),e.TgZ(318,"tbody")(319,"tr",8)(320,"td"),e._uU(321,' Get the current value of the status "indeterminate" (true/false). '),e.qZA()()()(),e._UZ(322,"hr",9),e.TgZ(323,"table",5)(324,"thead")(325,"th",8)(326,"span",3),e._uU(327,"setIndeterm(value: boolean): void;"),e.qZA()()(),e.TgZ(328,"tbody")(329,"tr",8)(330,"td"),e._uU(331,' Set the current value of the status "indeterminate" (true/false). '),e.qZA()()()(),e.TgZ(332,"table",5)(333,"thead")(334,"th",8)(335,"code"),e._uU(336,"Parameters"),e.qZA()()(),e.TgZ(337,"tbody")(338,"tr")(339,"td")(340,"code"),e._uU(341,"value: boolean;"),e.qZA()(),e.TgZ(342,"td"),e._uU(343,' The new status value is "indeterminate" (true/false). '),e.qZA()()()(),e._UZ(344,"hr",9),e.TgZ(345,"section",10)(346,"h4",1),e._uU(347," Css variables, optional. You can override the default values. "),e.TgZ(348,"a",2),e._uU(349,"#"),e.qZA()()(),e.TgZ(350,"table",5)(351,"thead")(352,"tr")(353,"th",6),e._uU(354,"Name"),e.qZA(),e.TgZ(355,"th"),e._uU(356,"Description"),e.qZA()()(),e.TgZ(357,"tbody")(358,"tr")(359,"td")(360,"code"),e._uU(361,"--glncb--default-[h,s,l]:"),e._UZ(362,"br"),e._uU(363," \xa0var(--glncl-default-[h,s,l],"),e._UZ(364,"br"),e._uU(365," \xa0\xa0var(--gln-default-[h,s,l])"),e._UZ(366,"br"),e._uU(367," \xa0);"),e.qZA()(),e.TgZ(368,"td")(369,"span"),e._uU(370,' The color value of the element in the "disabled" state. '),e.qZA(),e._UZ(371,"br"),e.TgZ(372,"span"),e._uU(373," The value is determined by the system css-variable "),e.TgZ(374,"code",11),e._uU(375,"--gln-default-[h,s,l]"),e.qZA(),e._uU(376,"."),e._UZ(377,"br"),e._uU(378," Or the css-variable of the GlnColor directive "),e.TgZ(379,"code",11),e._uU(380,"--glncl-default-[h,s,l]"),e.qZA(),e._uU(381,"."),e._UZ(382,"br"),e._uU(383,' The [h]-hue [s]-saturation [l]-lightness value for the "hsl()" css function. '),e.qZA()()(),e.TgZ(384,"tr")(385,"td")(386,"code"),e._uU(387,"--glncb--primary-[h,s,l]:"),e._UZ(388,"br"),e._uU(389," \xa0var(--glncl-primary-[h,s,l],"),e._UZ(390,"br"),e._uU(391," \xa0\xa0var(--gln-primary-[h,s,l])"),e._UZ(392,"br"),e._uU(393," \xa0);"),e.qZA()(),e.TgZ(394,"td")(395,"span"),e._uU(396,' The color value of the element in the "enabled" state. '),e.qZA(),e.TgZ(397,"span"),e._uU(398," The value is determined by the system css-variable "),e.TgZ(399,"code",11),e._uU(400,"--gln-primary-[h,s,l]"),e.qZA(),e._uU(401,"."),e._UZ(402,"br"),e._uU(403," Or the css-variable of the GlnColor directive "),e.TgZ(404,"code",11),e._uU(405,"--glncl-primary-[h,s,l]"),e.qZA(),e._uU(406,"."),e._UZ(407,"br"),e._uU(408,' The [h]-hue [s]-saturation [l]-lightness value for the "hsl()" css function. '),e.qZA()()(),e.TgZ(409,"tr")(410,"td")(411,"code"),e._uU(412,"--glncb-def-cl-svg:"),e._UZ(413,"br"),e._uU(414," \xa0hsla(var(--glncb--default-[h,s,l]), 60%);"),e.qZA()(),e.TgZ(415,"td")(416,"span"),e._uU(417,"Determines the color for an element when unchecked."),e.qZA()()(),e.TgZ(418,"tr")(419,"td")(420,"code"),e._uU(421,"--glncb-def-bg-hov:"),e._UZ(422,"br"),e._uU(423," \xa0hsla(var(--glncb--default-[h,s]), 70%, 20%);"),e.qZA()(),e.TgZ(424,"td")(425,"span"),e._uU(426,"Determines the background color on hover when unchecked."),e.qZA()()(),e.TgZ(427,"tr")(428,"td")(429,"code"),e._uU(430,"--glncb-def-rip:"),e._UZ(431,"br"),e._uU(432," \xa0hsla(var(--glncb--default-[h,s]), 70%, 30%);"),e.qZA()(),e.TgZ(433,"td")(434,"span"),e._uU(435,"Determines the color ripple effect of the unchecked."),e.qZA()()(),e.TgZ(436,"tr",8)(437,"td")(438,"i"),e._uU(439,'Parameters for state: "checked".'),e.qZA()()(),e.TgZ(440,"tr")(441,"td")(442,"code"),e._uU(443,"--glncb-def-chk-cl-svg:"),e._UZ(444,"br"),e._uU(445," \xa0hsl(var(--glncb--primary-[h,s,l]));"),e.qZA()(),e.TgZ(446,"td")(447,"span"),e._uU(448,"Determines the color for an element when checked."),e.qZA()()(),e.TgZ(449,"tr")(450,"td")(451,"code"),e._uU(452,"--glncb-def-chk-bg-hov:"),e._UZ(453,"br"),e._uU(454," \xa0hsla(var(--glncb--primary-[h,s]), 75%, 20%);"),e.qZA()(),e.TgZ(455,"td")(456,"span"),e._uU(457,"Determines the background color on hover when checked."),e.qZA()()(),e.TgZ(458,"tr")(459,"td")(460,"code"),e._uU(461,"--glncb-def-chk-rip:"),e._UZ(462,"br"),e._uU(463," \xa0hsla(var(--glncb--primary-[h,s]), 75%, 30%);"),e.qZA()(),e.TgZ(464,"td")(465,"span"),e._uU(466,"Determines the color ripple effect of the checked."),e.qZA()()(),e.TgZ(467,"tr")(468,"td")(469,"code"),e._uU(470,"--glnrb-def-lbl:"),e._UZ(471,"br"),e._uU(472," \xa0hsl(var(--glnrb--default[h,s,l]));"),e.qZA()(),e.TgZ(473,"td")(474,"span"),e._uU(475,"Specifies the label color for the checked and unchecked states."),e.qZA()()(),e.TgZ(476,"tr")(477,"td")(478,"code"),e._uU(479,"--glncb-def-ind-cl-svg:"),e._UZ(480,"br"),e._uU(481," \xa0var(--glncb-def-chk-cl-svg);"),e.qZA()(),e.TgZ(482,"td")(483,"span"),e._uU(484,'Determines the color for an element when status "indeterminate".'),e.qZA()()(),e.TgZ(485,"tr")(486,"td")(487,"code"),e._uU(488,"--glncb-def-ind-bg-hov:"),e._UZ(489,"br"),e._uU(490," \xa0var(--glncb-def-chk-bg-hov);"),e.qZA()(),e.TgZ(491,"td")(492,"span"),e._uU(493,'Determines the background color on hover when status "indeterminate".'),e.qZA()()(),e.TgZ(494,"tr")(495,"td")(496,"code"),e._uU(497,"--glncb-def-ind-rip:"),e._UZ(498,"br"),e._uU(499," \xa0var(--glncb-def-chk-rip);"),e.qZA()(),e.TgZ(500,"td")(501,"span"),e._uU(502,'Determines the color ripple effect of the status "indeterminate".'),e.qZA()()(),e.TgZ(503,"tr",8)(504,"td")(505,"i"),e._uU(506,'Parameters for state: "disabled".'),e.qZA()()(),e.TgZ(507,"tr")(508,"td")(509,"code"),e._uU(510,"--glncb-dis-cl-svg:"),e._UZ(511,"br"),e._uU(512," \xa0hsla(var(--glncb--default-[h,s,l]), 30%);"),e.qZA()(),e.TgZ(513,"td")(514,"span"),e._uU(515,"Determines the color of an element when it is disabled and unchecked."),e.qZA()()(),e.TgZ(516,"tr")(517,"td")(518,"code"),e._uU(519,"--glncb-dis-chk-cl-svg:"),e._UZ(520,"br"),e._uU(521," \xa0hsla(var(--glncb--default-[h,s,l]), 30%);"),e.qZA()(),e.TgZ(522,"td")(523,"span"),e._uU(524,"Determines the color of an element when it is disabled and checked."),e.qZA()()(),e.TgZ(525,"tr")(526,"td")(527,"code"),e._uU(528,"--glncb-dis-ind-cl-svg:"),e._UZ(529,"br"),e._uU(530," \xa0var(--glncb-dis-chk-cl-svg);"),e.qZA()(),e.TgZ(531,"td")(532,"span"),e._uU(533,' Determines the color of an element when it is disabled and has the "indeterminate" status. '),e.qZA()()(),e.TgZ(534,"tr")(535,"td")(536,"code"),e._uU(537,"--glncb-dis-lbl"),e._UZ(538,"br"),e._uU(539," \xa0hsla(var(--glncb--default-[h,s,l]), 50%);"),e.qZA()(),e.TgZ(540,"td")(541,"span"),e._uU(542,"Determines the label color of an element when it is disabled and checked/unchecked."),e.qZA()()(),e.TgZ(543,"tr",8)(544,"td")(545,"i"),e._uU(546,"Parameters of additional elements."),e.qZA()()(),e.TgZ(547,"tr")(548,"td")(549,"code"),e._uU(550,"--glncb-icon-pd:"),e._UZ(551,"br"),e._uU(552," \xa0calculated (~0.625em);"),e.qZA()(),e.TgZ(553,"td")(554,"span"),e._uU(555,"Determines the padding for the SVG image."),e.qZA()()(),e.TgZ(556,"tr")(557,"td")(558,"code"),e._uU(559,"--glncb-icon-sz:"),e._UZ(560,"br"),e._uU(561," \xa0calculated (~1.5em);"),e.qZA()(),e.TgZ(562,"td")(563,"span"),e._uU(564,"Determines the size (height and width) of the SVG image."),e.qZA()()()()(),e._UZ(565,"hr",9)),2&l&&(e.xp6(3),e.Q6J("href",o.urlCmCheckbox+"#Api",e.LSH),e.xp6(13),e.Q6J("href",o.urlCmCheckbox+"#api-properties",e.LSH),e.xp6(35),e.Q6J("href",o.urlCmCheckbox+"#config-interface",e.LSH),e.xp6(240),e.Q6J("href",o.urlCmCheckbox+"#api-methods",e.LSH),e.xp6(57),e.Q6J("href",o.urlCmCheckbox+"#api-css-variables-optional",e.LSH))},styles:["app-cm-checkbox-api{display:block}\n"],encapsulation:2,changeDetection:0}),n})();function S(n,a){1&n&&(e.TgZ(0,"div",6),e._UZ(1,"app-cm-checkbox-basic")(2,"hr",7),e.qZA())}function G(n,a){1&n&&(e.TgZ(0,"div",8),e._UZ(1,"app-cm-checkbox-attributes")(2,"hr",7),e.qZA())}function I(n,a){1&n&&(e.TgZ(0,"div",9),e._UZ(1,"app-cm-checkbox-size")(2,"hr",7),e.qZA())}function F(n,a){if(1&n&&(e.TgZ(0,"section",10)(1,"h3"),e._uU(2,"Palette"),e.qZA(),e.TgZ(3,"p"),e._uU(4," The "),e.TgZ(5,"a",11),e._uU(6,'"Palette GlnCheckbox#Basic"'),e.qZA(),e._uU(7," page shows you how to change the color palette of an element. "),e.qZA(),e._UZ(8,"hr",7),e.qZA()),2&n){const l=e.oxw();e.xp6(5),e.Q6J("href",l.urlPlCheckbox+"#Basic",e.LSH)}}function J(n,a){1&n&&(e.TgZ(0,"div",12),e._UZ(1,"app-cm-checkbox-config")(2,"hr",7),e.qZA())}function z(n,a){1&n&&(e.TgZ(0,"div",13),e._UZ(1,"app-cm-checkbox-api")(2,"hr",7),e.qZA())}const g="ComponentsCheckbox",D=[{path:"",component:(()=>{class n{constructor(l){this.ngZone=l,this.showNum="",this.urlPlCheckbox="/"+m.g.get("URL_PALETTE")+"/"+m.g.get("URL_PALETTE_CHECKBOX"),console.time(g)}ngAfterViewInit(){Promise.resolve().then(()=>{v.R.scrollByFragmentFromPath()}),this.ngZone.onStable.pipe((0,C.P)()).subscribe(()=>{console.timeEnd(g)})}}return n.\u0275fac=function(l){return new(l||n)(e.Y36(e.R0b))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cm-checkbox"]],decls:10,vars:6,consts:[["id","Basic",4,"ngIf"],["id","Attributes",4,"ngIf"],["id","Size",4,"ngIf"],["mr-vr","","id","Palette",4,"ngIf"],["id","Config",4,"ngIf"],["id","Api",4,"ngIf"],["id","Basic"],["br-tp",""],["id","Attributes"],["id","Size"],["mr-vr","","id","Palette"],[3,"href"],["id","Config"],["id","Api"]],template:function(l,o){1&l&&(e.TgZ(0,"h3"),e._uU(1,'Component: "GlnCheckbox"'),e.qZA(),e.YNc(2,S,3,0,"div",0),e.YNc(3,G,3,0,"div",1),e.YNc(4,I,3,0,"div",2),e.YNc(5,F,9,1,"section",3),e.YNc(6,J,3,0,"div",4),e.YNc(7,z,3,0,"div",5),e._UZ(8,"br")(9,"br")),2&l&&(e.xp6(2),e.Q6J("ngIf",!o.showNum||"01"===o.showNum),e.xp6(1),e.Q6J("ngIf",!o.showNum||"02"===o.showNum),e.xp6(1),e.Q6J("ngIf",!o.showNum||"03"===o.showNum),e.xp6(1),e.Q6J("ngIf",!o.showNum),e.xp6(1),e.Q6J("ngIf",!o.showNum||"08"===o.showNum),e.xp6(1),e.Q6J("ngIf",!o.showNum||"09"===o.showNum))},dependencies:[d.O5,T,k,q,N,y],styles:["app-cm-checkbox{display:block}\n"],encapsulation:2,changeDetection:0}),n})()}];let P=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[b.Bz.forChild(D),b.Bz]}),n})(),R=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[d.ez,Z,f,_,U,A,P]}),n})()}}]);