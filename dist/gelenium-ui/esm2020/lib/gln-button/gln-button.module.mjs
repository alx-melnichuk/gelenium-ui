import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { GlnFrameExteriorButtonModule } from '../directives/gln-frame-exterior-button/gln-frame-exterior-button.module';
import { GlnFrameOrnamentModule } from '../directives/gln-frame-ornament/gln-frame-ornament.module';
import { GlnFrameSizeModule } from '../directives/gln-frame-size/gln-frame-size.module';
import { GlnTouchRippleModule } from '../gln-touch-ripple/gln-touch-ripple.module';
import { GlnButtonComponent } from './gln-button.component';
import { GlnLinkDirective } from './gln-link.directive';
import * as i0 from "@angular/core";
export class GlnButtonModule {
}
GlnButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.2", ngImport: i0, type: GlnButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GlnButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.1.2", ngImport: i0, type: GlnButtonModule, declarations: [GlnButtonComponent, GlnLinkDirective], imports: [CommonModule, GlnFrameExteriorButtonModule, GlnFrameOrnamentModule, GlnFrameSizeModule, GlnTouchRippleModule], exports: [GlnButtonComponent, GlnLinkDirective] });
GlnButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.1.2", ngImport: i0, type: GlnButtonModule, imports: [CommonModule, GlnFrameExteriorButtonModule, GlnFrameOrnamentModule, GlnFrameSizeModule, GlnTouchRippleModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.2", ngImport: i0, type: GlnButtonModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GlnButtonComponent, GlnLinkDirective],
                    imports: [CommonModule, GlnFrameExteriorButtonModule, GlnFrameOrnamentModule, GlnFrameSizeModule, GlnTouchRippleModule],
                    exports: [GlnButtonComponent, GlnLinkDirective],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xuLWJ1dHRvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9nZWxlbml1bS11aS9zcmMvbGliL2dsbi1idXR0b24vZ2xuLWJ1dHRvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDeEgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDcEcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDeEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFFbkYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBT3hELE1BQU0sT0FBTyxlQUFlOzs0R0FBZixlQUFlOzZHQUFmLGVBQWUsaUJBSlgsa0JBQWtCLEVBQUUsZ0JBQWdCLGFBQ3pDLFlBQVksRUFBRSw0QkFBNEIsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsRUFBRSxvQkFBb0IsYUFDNUcsa0JBQWtCLEVBQUUsZ0JBQWdCOzZHQUVuQyxlQUFlLFlBSGhCLFlBQVksRUFBRSw0QkFBNEIsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsRUFBRSxvQkFBb0I7MkZBRzNHLGVBQWU7a0JBTDNCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsZ0JBQWdCLENBQUM7b0JBQ3BELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSw0QkFBNEIsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsRUFBRSxvQkFBb0IsQ0FBQztvQkFDdkgsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsZ0JBQWdCLENBQUM7aUJBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IEdsbkZyYW1lRXh0ZXJpb3JCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2dsbi1mcmFtZS1leHRlcmlvci1idXR0b24vZ2xuLWZyYW1lLWV4dGVyaW9yLWJ1dHRvbi5tb2R1bGUnO1xuaW1wb3J0IHsgR2xuRnJhbWVPcm5hbWVudE1vZHVsZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvZ2xuLWZyYW1lLW9ybmFtZW50L2dsbi1mcmFtZS1vcm5hbWVudC5tb2R1bGUnO1xuaW1wb3J0IHsgR2xuRnJhbWVTaXplTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9nbG4tZnJhbWUtc2l6ZS9nbG4tZnJhbWUtc2l6ZS5tb2R1bGUnO1xuaW1wb3J0IHsgR2xuVG91Y2hSaXBwbGVNb2R1bGUgfSBmcm9tICcuLi9nbG4tdG91Y2gtcmlwcGxlL2dsbi10b3VjaC1yaXBwbGUubW9kdWxlJztcblxuaW1wb3J0IHsgR2xuQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9nbG4tYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHbG5MaW5rRGlyZWN0aXZlIH0gZnJvbSAnLi9nbG4tbGluay5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtHbG5CdXR0b25Db21wb25lbnQsIEdsbkxpbmtEaXJlY3RpdmVdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBHbG5GcmFtZUV4dGVyaW9yQnV0dG9uTW9kdWxlLCBHbG5GcmFtZU9ybmFtZW50TW9kdWxlLCBHbG5GcmFtZVNpemVNb2R1bGUsIEdsblRvdWNoUmlwcGxlTW9kdWxlXSxcbiAgZXhwb3J0czogW0dsbkJ1dHRvbkNvbXBvbmVudCwgR2xuTGlua0RpcmVjdGl2ZV0sXG59KVxuZXhwb3J0IGNsYXNzIEdsbkJ1dHRvbk1vZHVsZSB7fVxuIl19