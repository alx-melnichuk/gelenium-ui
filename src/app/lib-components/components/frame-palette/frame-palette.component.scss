/*# sourceURL=frame-palette.component.scss */

app-frame-palette {
  display: block;

  .fp-spec {
    --fp-hover-cl: #00acc1;
    --fp-error-cl: #ad1457;
    --fp-error-cl2: #c13874eb;
    --fp-hover-err-cl: #f3006a;
    --fp-focus-cl: #0097a7;
    --fp-disab-cl: #9c27b0;

    --fp-label-default-cl: #5c6bc0;
    // For "frame" - outlined
    --fp-o-default-brd-cl: #5c6bc0;
    // For "frame" - underline
    --fp-u-default-bg-cl: rgba(178, 235, 242, 0.6);
    --fp-u-error-bg-cl: rgba(240, 98, 146, 0.15);
    --fp-u-hover-err-bg-cl: rgba(240, 94, 146, 0.09);
    --fp-u-focus-err-bg-cl: rgba(240, 94, 146, 0.18);
    --fp-u-hover-bg-cl: rgba(172, 235, 236, 0.3);
    --fp-u-focus-bg-cl: rgba(178, 235, 242, 0.4);
    --fp-u-disab-bg-cl: rgba(178, 235, 242, 0.2);
    // For "frame" - standard and underline
    --fp-su-default-brd-cl: rgba(101, 1, 151, 0.9);
  }

  // Color for "label".
  // The state without: disabled, error, mouse hover, focused.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):not(:hover):not(:focus-within)>.glnf-label {
    color: var(--fp-label-default-cl);
  } // The state without: disabled, error, focused and with mouse hover.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):hover:not(:focus-within)>.glnf-label {
    color: var(--fp-hover-cl);
  } // The state without: disabled, error and with focused.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):focus-within>.glnf-label {
    color: var(--fp-focus-cl);
  } // The state without: disabled, mouse hover, focused and with error.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:not(:hover):not(:focus-within)>.glnf-label {
    color: var(--fp-error-cl);
  } // The state without: disabled, focused and with error, mouse hover.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:hover:not(:focus-within)>.glnf-label {
    color: var(--fp-hover-err-cl);
  } // The state without: disabled and with error, focused.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:focus-within>.glnf-label {
    color: var(--fp-error-cl);
  } // The state with disabled.
  .fp-spec .gln-frame.gln-disabled>.glnf-label {
    color: var(--fp-disab-cl);
  }

  // Border-color for "outlined" mode.
  // The state without: disabled, error, mouse hover, focused.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):not(:hover):not(:focus-within) .glnf-fieldset {
    border-color: var(--fp-o-default-brd-cl);
  } // The state without: disabled, error, focused and with mouse hover.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):hover:not(:focus-within) .glnf-fieldset {
    border-color: var(--fp-hover-cl);
  } // The state without: disabled, error and with focused.
  .fp-spec .gln-frame:not(.gln-disabled):not(.gln-error):focus-within .glnf-fieldset {
    border-color: var(--fp-focus-cl);
  } // The state without: disabled, mouse hover, focused and with error.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:not(:hover):not(:focus-within) .glnf-fieldset {
    border-color: var(--fp-error-cl);
  } // The state without: disabled, focused and with error, mouse hover.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:hover:not(:focus-within) .glnf-fieldset {
    border-color: var(--fp-hover-err-cl);
  } // The state without: disabled and with error, focused.
  .fp-spec .gln-frame:not(.gln-disabled).gln-error:focus-within .glnf-fieldset {
    border-color: var(--fp-error-cl);
  } // The state with disabled.
  .fp-spec .gln-frame.gln-disabled .glnf-fieldset {
    border-color: var(--fp-disab-cl);
  }
  
  // Background-color for "underline" mode.
  // The state without: disabled, error, mouse hover, focused.
  .fp-spec .glnf-underline:not(.gln-disabled):not(.gln-error):not(:hover):not(:focus-within)>.glnf-border {
    background-color: var(--fp-u-default-bg-cl);
  } // The state without: disabled, error, focused and with mouse hover.
  .fp-spec .glnf-underline:not(.gln-disabled):not(.gln-error):hover:not(:focus-within)>.glnf-border {
    background-color: var(--fp-u-hover-bg-cl);
  } // The state without: disabled, error and with focused.
  .fp-spec .glnf-underline:not(.gln-disabled):not(.gln-error):focus-within>.glnf-border {
    background-color: var(--fp-u-focus-bg-cl);
  } // The state without: disabled, mouse hover, focused and with error.
  .fp-spec .glnf-underline:not(.gln-disabled).gln-error:not(:hover):not(:focus-within)>.glnf-border {
    background-color: var(--fp-u-error-bg-cl);
  } // The state without: disabled, focused and with error, mouse hover.
  .fp-spec .glnf-underline:not(.gln-disabled).gln-error:hover:not(:focus-within)>.glnf-border {
    background-color: var(--fp-u-hover-err-bg-cl);
  } // The state without: disabled and with error, focused.
  .fp-spec .glnf-underline:not(.gln-disabled).gln-error:focus-within>.glnf-border {
    background-color: var(--fp-u-focus-err-bg-cl);
  } // The state with disabled.
  .fp-spec .glnf-underline.gln-disabled>.glnf-border {
    background-color: var(--fp-u-disab-bg-cl);
  }

  // Border-bottom-color for "underline" and "standard" mode.
  // The state without: disabled, error, mouse hover, focused.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled):not(.gln-error):not(:hover):not(:focus-within)>.glnf-border:before {
    border-bottom-color: var(--fp-su-default-brd-cl);
  } // The state without: disabled, error, focused and with mouse hover.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled):not(.gln-error):hover:not(:focus-within)>.glnf-border:before {
    border-bottom-color: var(--fp-hover-cl);
  } // The state without: disabled, mouse hover, focused and with error.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled).gln-error:not(:hover):not(:focus-within)>.glnf-border:before {
    border-bottom-color: var(--fp-error-cl);
  } // The state without: disabled, focused and with error, mouse hover.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled).gln-error:hover:not(:focus-within)>.glnf-border:before {
    border-bottom-color: var(--fp-hover-err-cl);
  } // The state without: disabled, error.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled):not(.gln-error)>.glnf-border:after {
    border-bottom-color: var(--fp-focus-cl);
  } // The state without: disabled and with error.
  .fp-spec .glnf-bottom-frame:not(.gln-disabled).gln-error>.glnf-border:after {
    border-bottom-color: var(--fp-error-cl);
  } // The state with disabled.
  .fp-spec .glnf-bottom-frame.gln-disabled>.glnf-border:before {
    border-bottom-color: var(--fp-disab-cl);
  }

  // Color for "HintOrError".
  .fp-spec .gln-hint-or-error {
    // The state without error, focused and disabled.
    &:not(.ghe-disabled):not(.ghe-error):not(.ghe-focused) {
      color: var(--fp-label-default-cl);
    } // The state with error.
    &:not(.ghe-disabled).ghe-error {
      color: var(--fp-error-cl2);
    } // The state with focused but without error.
    &:not(.ghe-disabled).ghe-focused:not(.ghe-error) {
      color: var(--fp-focus-cl);
    } // The state with focused and error.
    &:not(.ghe-disabled).ghe-focused.ghe-error {
      color: var(--fp-error-cl);
    } // The state with disabled but without error.
    &.ghe-disabled {
      color: var(--fp-disab-cl);
    }
  }
}