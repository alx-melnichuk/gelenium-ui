/*# sourceURL=frame-input-palette.component.scss */

app-frame-input-palette {
  display: block;

  .fip-specific {
    --fip-hover-color: #00acc1;
    --fip-error-color: #ad1457;
    --fip-hover-error-color: #f3006a;
    --fip-focused-color: #0097a7;
    --fip-disabled-color: #9c27b0;

    --fip-label-default-color: #5c6bc0;
    // For "frame" - outlined
    --fip-o-default-brd-color: #5c6bc0;
    // For "frame" - underline
    --fip-u-default-bg-color: rgba(178, 235, 242, 0.6);
    --fip-u-error-bg-color: rgba(240, 98, 146, 0.15);
    --fip-u-hover-error-bg-color: rgba(240, 94, 146, 0.09);
    --fip-u-hover-bg-color: rgba(172, 235, 236, 0.3);
    --fip-u-focused-bg-color: rgba(178, 235, 242, 0.4);
    --fip-u-disabled-bg-color: rgba(178, 235, 242, 0.2);
    // For "frame" - standard and underline
    --fip-su-default-brd-color: rgba(101, 1, 151, 0.9);
  }

  // Color for "label".

  // The state without mouse hover, error, focused and disabled.
  .fip-specific .grn-frame-input:not(:hover):not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-label {
    color: var(--fip-label-default-color);
  }// The state with mouse hover but without error, focused and disabled.
  .fip-specific .grn-frame-input:hover:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-label {
    color: var(--fip-hover-color);
  }// The state with error.
  .fip-specific .grn-frame-input.gfi-error>.gfi-label {
    color: var(--fip-error-color);
  }// The state with mouse hover and error but without focused and disabled.
  .fip-specific .grn-frame-input:hover.gfi-error:not(.gfi-focused):not(.gfi-disabled)>.gfi-label {
    color: var(--fip-hover-error-color);
  } // The state with focused but without error.
  .fip-specific .grn-frame-input.gfi-focused:not(.gfi-error)>.gfi-label {
    color: var(--fip-focused-color);
  }// The state with disabled but without error.
  .fip-specific .grn-frame-input.gfi-disabled:not(.gfi-error)>.gfi-label {
    color: var(--fip-disabled-color);
  }

  // Border-color for "outlined" mode.

  // The state without mouse hover, error, focused and disabled.
  .fip-specific .grn-frame-input:not(:hover):not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--fip-o-default-brd-color);
  }// The state with mouse hover but without error, focused and disabled.
  .fip-specific .grn-frame-input:hover:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--fip-hover-color);
  }// The state with error.
  .fip-specific .grn-frame-input.gfi-error .gfi-fieldset {
    border-color: var(--fip-error-color);
  }// The state with mouse hover and error but without focused and disabled.
  .fip-specific .grn-frame-input:hover.gfi-error:not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--fip-hover-error-color);
  }// The state with focused but without error.
  .fip-specific .grn-frame-input.gfi-focused:not(.gfi-error) .gfi-fieldset {
    border-color: var(--fip-focused-color);
  }// The state with disabled but without error.
  .fip-specific .grn-frame-input.gfi-disabled:not(.gfi-error) .gfi-fieldset {
    border-color: var(--fip-disabled-color);
  }
  
  // Background-color for "underline" mode.
  // The state without mouse hover, error, focused and disabled.
  .fip-specific .gfi-underline:not(:hover):not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-frame {
    background-color: var(--fip-u-default-bg-color);
  } // The state with mouse hover but without error, focused and disabled.
  .fip-specific .gfi-underline:hover:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-frame {
    background-color: var(--fip-u-hover-bg-color);
  } // The state with error.
  .fip-specific .gfi-underline.gfi-error>.gfi-frame {
    background-color: var(--fip-u-error-bg-color);
  } // The state with mouse hover and error but without focused and disabled.
  .fip-specific .gfi-underline:hover.gfi-error:not(.gfi-focused):not(.gfi-disabled)>.gfi-frame {
    background-color: var(--fip-u-hover-error-bg-color);
  } // The state with focused but without error.
  .fip-specific .gfi-underline.gfi-focused:not(.gfi-error)>.gfi-frame {
    background-color: var(--fip-u-focused-bg-color);
  } // The state with disabled but without error.
  .fip-specific .gfi-underline.gfi-disabled:not(.gfi-error)>.gfi-frame {
    background-color: var(--fip-u-disabled-bg-color);
  }

  // Border-bottom-color for "underline" and "standard" mode.
  // The state without mouse hover, error, focused and disabled.
  .fip-specific .gfi-border:not(:hover):not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-frame:before {
    border-bottom-color: var(--fip-su-default-brd-color);
  } // The state with mouse hover but without error, focused and disabled.
  .fip-specific .gfi-border:hover:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled)>.gfi-frame:before {
    border-bottom-color: var(--fip-hover-color);
  } // The state with error.
  .fip-specific .gfi-border.gfi-error>.gfi-frame:before {
    border-bottom-color: var(--fip-error-color);
  }
  .fip-specific .gfi-border.gfi-error>.gfi-frame:after {
    border-bottom-color: var(--fip-error-color);
  } // The state with mouse hover and error but without focused and disabled.
  .fip-specific .gfi-border:hover.gfi-error:not(.gfi-focused):not(.gfi-disabled)>.gfi-frame:before {
    border-bottom-color: var(--fip-hover-error-color);
  } // The state with focused but without error.
  .fip-specific .gfi-border.gfi-focused:not(.gfi-error)>.gfi-frame:after {
    border-bottom-color: var(--fip-focused-color);
  } // The state with disabled but without error.
  .fip-specific .gfi-border.gfi-disabled:not(.gfi-error)>.gfi-frame:before {
    border-bottom-color: var(--fip-disabled-color);
  }

  // Color for "helperText".
  // The default color for the helperText.
  .fip-specific .gfi-helper-text:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) {
    color: var(--fip-label-default-color);
  } // The color of the helperText in an error state.
  .fip-specific .gfi-helper-text.gfi-error {
    color: var(--fip-error-color);
  } // The color of the helperText when getting focus.
  .fip-specific .gfi-helper-text.gfi-focused:not(.gfi-error) {
    color: var(--fip-label-default-color);
  } // The color of the helperText in state is disabled.
  .fip-specific .gfi-helper-text.gfi-disabled:not(.gfi-error) {
    color: var(--fip-disabled-color);
  }

  .fip-specific .gfi-hint-or-error {
    // The state without error, focused and disabled.
    &:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) {
      color: var(--fip-label-default-color);
    } // The state with error.
    &.gfi-error {
      color: var(--fip-error-color);
    } // The state with focused but without error.
    &.gfi-focused:not(.gfi-error) {
      color: var(--fip-focused-color);
    } // The state with disabled but without error.
    &.gfi-disabled:not(.gfi-error) {
      color: var(--fip-disabled-color);
    }
  }

  // BootStrap
  .fip-bstrap {
    color: #495057;
  }
  .fip-bstrap {
    --g-err-cl: #dc3545;
    --g-hov-err-cl: #dc3545;
    --g-foc-cl: #80bdff;
    --g-o-def-br-cl: #ced4da;
  }

  .fip-bstrap>.grn-frame-input:not(:hover):not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--g-o-def-br-cl);
  }
  .fip-bstrap>.grn-frame-input:hover:not(.gfi-error):not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--g-o-def-br-cl);
  }
  .fip-bstrap>.grn-frame-input.gfi-error .gfi-fieldset {
    border-color: var(--g-err-cl);
  }
  .fip-bstrap>.grn-frame-input:hover.gfi-error:not(.gfi-focused):not(.gfi-disabled) .gfi-fieldset {
    border-color: var(--g-hov-err-cl);
  }
  .fip-bstrap>.grn-frame-input.gfi-focused:not(.gfi-error) .gfi-fieldset {
    border-color: var(--g-foc-cl);
  }
  .fip-bstrap>.grn-frame-input.gfi-disabled .gfi-fieldset {
    border-color: var(--g-o-def-br-cl);
  }
  .fip-bstrap>.grn-frame-input.gfi-disabled {
    background-color: #e9ecef;
    opacity: 1;
  }
  .fip-bstrap>grn-hint-or-error.gfi-error {
    color: var(--g-err-cl);
  }

  .fip-bstrap>.grn-frame-input.gfi-focused .gfi-fieldset {
    border-width: 1px;
  }
  .fip-bstrap>.grn-frame-input.gfi-focused.gfi-error .gfi-fieldset {
    box-shadow: 0 0 0 0.2rem rgb(220 53 69 / 25%);
  }
  .fip-bstrap>.grn-frame-input.gfi-focused:not(.gfi-error) .gfi-fieldset {
    box-shadow: 0 0 0 0.2rem rgb(0 123 255 / 25%);
  }
  .fip-bstrap>.grn-frame-input.gfi-error .gi-input {
    padding-right: 1.4em;
    background-image: url("data:image/svg+xml,"
    + "<svg xmlns='http://www.w3.org/2000/svg' width='12' "
    + "height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'>"
    + "<circle cx='6' cy='6' r='4.5'/>"
    + "<path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/>"
    + "<circle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/>"
    + "</svg>");
    background-repeat: no-repeat;
    background-position: right center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    margin-right: 5px;
  }
}