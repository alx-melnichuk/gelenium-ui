/*# sourceURL=input-palette.component.scss */

app-input-palette {
  display: block;

  .ip-elem {
    width: 28ch;
  }

  // ** Palette like Bootstrap. **

  .ip-bstrap .gln-frame {
    line-height: 1.5;
    // Primary hsl(200, 100%, 50%);
    --glncl-primary-h: 200;
    --glncl-primary-s: 100%;
    // Danger hsl(355, 70%, 50%);
    --glncl-danger-h: 355;
    --glncl-danger-s: 70%;
    // Hover styles match the default styles.
    --glnfr-hov-lb-cl: var(--glnfr--lb-cl-def);
    --glnfr-hov-br-cl: var(--glnfr--br-cl-def);
    // Blocking frame resizing when hovering the mouse for "Outlined" mode.
    --glnfr-hov-dcr-br-wd: unset;
    // Blocking frame resizing when receiving focus for "Outlined" mode.
    --glnfr-foc-dcr-br-wd: unset;
  }
  .ip-bstrap .gln-frame:focus-within:not(.gln-error) {
    box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);
  }
  .ip-bstrap .gln-frame:focus-within.gln-error {
    box-shadow: 0 0 0 0.25rem rgb(220 53 69 / 25%);
  }
  // Definition a color to represent "success".
  .ip-bstrap .ip-success .gln-frame {
    --glncl-primary-h: 135;
    --glncl-primary-s: 40%;
  }
  .ip-bstrap .ip-success .gln-frame:focus-within:not(.gln-error) {
    box-shadow: 0 0 0 0.25rem rgb(25 135 84 / 25%);
  }
  // Definition of svg to represent "error".
  .ip-bstrap .gln-frame.gln-error .glnin-input {
    padding-right: 1.4em;
    background-image: url("data:image/svg+xml,"
    + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12'"
    + " width='12' height='12' fill='none' stroke='%23dc3545'>"
    + "<circle cx='6' cy='6' r='4.5'/>"
    + "<path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/>"
    + "<circle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/>"
    + "</svg>");
    background-repeat: no-repeat;
    background-position: right center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    margin-right: 0.5em;
  }
  // Definition of svg to represent "error".
  .ip-bstrap .ip-success .gln-frame:not(.gln-error) .glnin-input {
    padding-right: 1.4em;
    background-image: url("data:image/svg+xml,"
    + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'>"
    + "<path fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-."
    + "8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/>"
    + "</svg>");
    background-repeat: no-repeat;
    background-position: right center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    margin-right: 0.5em;
  }
  .ip-bstrap .gln-frame.gln-disabled {
    --glnfr-dis-br-cl: #ced4da;
    background-color: #e9ecef;
  }

  // gln-hint-or-error
  // On focus, the style matches the default style.
  .ip-bstrap .gln-hint-or-error {
    --glnhe-foc-lb-cl: var(--glnhe--lb-cl-def);
  }

  // ** Palette like Material-UI. **

  .ip-material-ui .gln-frame {
    // "default"
    --mui-default: rgba(0, 0, 0, 0.6);
    --mui-default-dis: rgba(0, 0, 0, 0.38);
    --mui-default-hov: rgba(0, 0, 0, 0.87);
    --glncl-default-h: 20;
    --glncl-default-s: 2%;
    // "primary"
    --mui-primary: #1976d2;
    --glncl-primary-h: 210;
    --glncl-primary-s: 79%;
    // "danger"
    --mui-danger: #d32f2f;
    --glncl-danger-h: 0;
    --glncl-danger-s: 65%;
    // Blocking frame resizing when hovering the mouse for "Outlined" mode.
    --glnfr-hov-dcr-br-wd: unset;
  }
  
  // gln-frame
  .ip-material-ui .gln-frame:not([err]) {
    --glnfr-def-lb-cl: var(--mui-default);
    --glnfr-def-br-cl: rgba(0, 0, 0, 0.23);
    --glnfr-def-bf-cl: rgba(0, 0, 0, 0.42);

    --glnfr-hov-lb-cl: var(--mui-default);
    --glnfr-hov-br-cl: var(--mui-default-hov);
    --glnfr-hov-bf-cl: var(--mui-default-hov);

    --glnfr-foc-lb-cl: var(--mui-primary);
    --glnfr-foc-br-cl: var(--mui-primary);
    --glnfr-foc-bf-cl: var(--mui-default-hov);
    --glnfr-foc-af-cl: var(--mui-primary);
  }
  .ip-material-ui .gln-frame:not([dis])[err] {
    --glnfr-def-lb-cl: var(--mui-danger);
    --glnfr-def-br-cl: var(--mui-danger);
    --glnfr-def-bf-cl: var(--mui-danger);

    --glnfr-hov-lb-cl: var(--mui-danger);
    --glnfr-hov-br-cl: var(--mui-danger);
    --glnfr-hov-bf-cl: var(--mui-danger);

    --glnfr-foc-lb-cl: var(--mui-danger);
    --glnfr-foc-br-cl: var(--mui-danger);
    --glnfr-foc-bf-cl: var(--mui-danger);
    --glnfr-foc-af-cl: var(--mui-danger);
  }
  .ip-material-ui .gln-frame {
    --glnfr-def-bg-cl: rgba(0, 0, 0, 0.06);
    --glnfr-hov-bg-cl: rgba(0, 0, 0, 0.09);
    --glnfr-foc-bg-cl: rgba(0, 0, 0, 0.05);

    --glnfr-dis-lb-cl: var(--mui-default-dis);
    --glnfr-dis-br-cl: rgba(0, 0, 0, 0.26);
    --glnfr-dis-bg-cl: rgba(0, 0, 0, 0.12);
    --glnfr-dis-bf-cl: rgba(0, 0, 0, 0.42);
  }

  // gln-hint-or-error
  .ip-material-ui .gln-hint-or-error:not([dis]):not([err]) {
    --glnhe-def-lb-cl: var(--mui-default);
    --glnhe-foc-lb-cl: var(--mui-default);
  }
  .ip-material-ui .gln-hint-or-error:not([dis])[err] {
    --glnhe-def-lb-cl: var(--mui-danger);
    --glnhe-foc-lb-cl: var(--mui-danger);
  }
  .ip-material-ui .gln-hint-or-error[dis] {
    --glnhe-dis-lb-cl: var(--mui-default-dis);
  }
}
