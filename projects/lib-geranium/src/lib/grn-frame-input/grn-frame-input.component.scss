/*# sourceURL=grn-frame-input.component.scss */

@import '../_styles/mx-align-items.scss';
@import '../_styles/mx-display-inline-flex.scss';
@import '../_styles/mx-flex-direction.scss';
@import '../_styles/mx-transform-scale-x.scss';
@import '../_styles/mx-transform-translate-x-y-scale.scss';

:root {
  // The color of the label and border on mouse hover.
  --g-hov-cl: rgba(0, 0, 0, 0.87);
  // The color of the label and border in an error state.
  --g-err-cl: #d32f2f;
  // The color of the label and border on mouse hover in an error state.
  --g-hov-err-cl: #ff8950;
  // The color of the border and label when getting focus.
  --g-foc-cl: #1976d2;

  // For "label"
  // The default color for the label.
  --g-lbl-def-cl: rgba(0, 0, 0, 0.6);
  // The color of the label and border in the state is disabled.
  --g-lbl-dis-cl: rgba(0, 0, 0, 0.38);

  // For "gfi-frm-outlined"
  // The default border color for "outlined" mode.
  --g-o-def-br-cl: rgba(0, 0, 0, 0.23);

  // For "gfi-frm-underline"
  // The default background color and on error for "underline" mode.
  --g-u-def-bg-cl: rgba(0, 0, 0, 0.06);
  // The  background color when getting focus for "underline" mode.
  --g-u-foc-bg-cl: rgba(0, 0, 0, 0.04);
  // The background color on mouse hover for the "underline" mode.
  --g-u-hov-bg-cl: rgba(0, 0, 0, 0.09);
  // The background color in the state is disabled for the "underline" mode.
  --g-u-dis-bg-cl: rgba(0, 0, 0, 0.12);

  // For "gfi-frm-underline" and "gfi-frm-standard"
  // The default bottom border color for "underline" and "standard" modes.
  --g-su-bef-br-cl: rgba(0, 0, 0, 0.42);
  // The lower border color in the state is disabled for the "underline" and "standard" modes.
  --g-su-dis-br-cl: rgba(0, 0, 0, 0.32);

  .Grn-palette {
    // Color for "Input".
    // The color in state is disabled for an input element.
    .p-inp-dis-cl        { color: var(--g-lbl-dis-cl); }

    // Color for "label" and "helperText".
    // The default color for the label and helperText.
    .p-lbl-def-cl        { color: var(--g-lbl-def-cl); }
    // The color of the label and helperText in an error state.
    .p-lbl-err-cl        { color: var(--g-err-cl);     }
    // The color of the label and helperText on mouse hover in an error state.
    .p-lbl-hov-err-cl    { color: var(--g-hov-err-cl); }
    // The color of the label and helperText on mouse hover.
    .p-lbl-hov-cl        { color: var(--g-hov-cl);     }
    // The color of the label and helperText when getting focus.
    .p-lbl-foc-cl        { color: var(--g-foc-cl);     }
    // The color of the label and helperText in state is disabled.
    .p-lbl-dis-cl        { color: var(--g-lbl-dis-cl); }

    // Border-color for "outlined" mode.
    // The default border color for "outlined" mode.
    .p-o-def-br-cl       { border-color: var(--g-o-def-br-cl); }
    // The border color in an error state for "outlined" mode.
    .p-o-err-br-cl       { border-color: var(--g-err-cl);      }
    // The border color on mouse hover in an error state for "outlined" mode.
    .p-o-hov-err-br-cl   { border-color: var(--g-hov-err-cl);  }
    // The border color on mouse hover for "outlined" mode.
    .p-o-hov-br-cl       { border-color: var(--g-hov-cl);      }
    // The border color when getting focus for "outlined" mode.
    .p-o-foc-br-cl       { border-color: var(--g-foc-cl);      }
    // The border color in state is disabled for "outlined" mode.
    .p-o-dis-br-cl       { border-color: var(--g-lbl-dis-cl);  }

    // Background-color for "underline" mode.
    // The default background color for "underline" mode.
    .p-u-def-bg-cl      { background-color: var(--g-u-def-bg-cl); }
    // The background color in an error state for "underline" mode.
    .p-u-err-bg-cl      { background-color: var(--g-u-def-bg-cl); }
    // The background color on mouse hover in an error state  for "underline" mode.
    .p-u-hov-err-bg-cl  { background-color: var(--g-u-hov-bg-cl); }
    // The background color on mouse hover for "underline" mode.
    .p-u-hov-bg-cl      { background-color: var(--g-u-hov-bg-cl); }
    // The background color when getting focus for "underline" mode.
    .p-u-foc-bg-cl      { background-color: var(--g-u-foc-bg-cl); }
    // The background color in state is disabled for "underline" mode.
    .p-u-dis-bg-cl      { background-color: var(--g-u-dis-bg-cl); }

    // Border-bottom-color for "underline" and "standard" mode.
    // The default border bottom color for "standard" and "underline" mode.
    .p-su-def-br-cl:before     { border-bottom-color: var(--g-su-bef-br-cl); }
    // The border bottom color in an error state for "standard" and "underline" mode.
    .p-su-err-br-cl:before     { border-bottom-color: var(--g-err-cl);       }
    // The border bottom color in an error state for "standard" and "underline" mode.
    .p-su-err-br-cl:after      { border-bottom-color: var(--g-err-cl);       }
    // The border bottom color on mouse hover in an error state for "standard" and "underline" mode.
    .p-su-hov-err-br-cl:before { border-bottom-color: var(--g-hov-err-cl);   }
    // The border bottom color on mouse hover for "standard" and "underline" mode.
    .p-su-hov-br-cl:before     { border-bottom-color: var(--g-hov-cl);       }
    // The border bottom color when getting focus for "standard" and "underline" mode.
    .p-su-foc-br-cl:after      { border-bottom-color: var(--g-foc-cl);       }
    // The border bottom color in state is disabled for "standard" and "underline" mode.
    .p-su-dis-br-cl:before     { border-bottom-color: var(--g-su-dis-br-cl); }
  }
}

grn-frame-input { //outline: 1px dashed crimson;
  --gfi-ln-hg: 1.4375em;
  --gfi-br-wd: 1px;
  --gfi-lgnd-pd: 0.6ex; // 4.7px     0.6ex=3.8px  0.56ex=3.55px  // vert

  --gfi-o-br-rd: calc(var(--gfi-size)/10);
  --gfi-o-lgnd-wd: calc(133% - 1.5em);
  --gfi-o-lgnd-wd-2: calc(100% - 1.5em);
  --gfi-o-lgnd-pd: calc(0.25*var(--gfi-size)); // 14
  --gfi-o-lgnd-pd-2: calc(0.25*var(--gfi-size)); // 14

  --gfi-u-br-rd: calc(var(--gfi-size)/10);
  --gfi-u-lgnd-wd: calc(133% - 1.5em);
  --gfi-u-lgnd-wd-2: calc(100% - 1.5em);
  --gfi-u-lgnd-pd: calc(0.214285714*var(--gfi-size)); // 12px;
  --gfi-u-lgnd-pd-2: calc(0.214285714*var(--gfi-size)); // 12px;

  @include mxDisplayInlineFlex();
  @include mxFlexDirection(column);
  line-height: var(--gfi-ln-hg);
  // #!! letter-spacing: 0.00938em; // #!!root
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
  vertical-align: top;

  // Section "Label".
  .gfi-label { // outline: 1px dashed green;
    // #!! font-family: "Roboto","Helvetica","Arial",sans-serif;    // #!! font-weight: 400;    // #!! font-size: 1em;    // line-height: 1.4375 em;
    // #!! letter-spacing: 0.00938em;
    padding: 0;
    position: absolute;
    display: block;
    transform-origin: top left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    left: 0;
    top: 0;
    -webkit-transition: color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,-webkit-transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,max-width 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    transition: color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,max-width 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    z-index: 1;
    pointer-events: none;
  }
  .gfi-lbl-outlined {
    &.gfi-lbl-shrink {
      max-width: var(--gfi-o-lgnd-wd); // # calc(133% - 24px)
      @include mxTransformTranslateXYScale(var(--gfi-o-lgnd-pd), calc(-0.4*var(--gfi-ln-hg)), 0.75); // # (14px, -9px, 0.75)
    }
    &:not(.gfi-lbl-shrink) {
      max-width: var(--gfi-o-lgnd-wd-2); // # calc(100% - 24px)
      @include mxTransformTranslateXYScale(var(--gfi-o-lgnd-pd-2), calc((var(--gfi-size) - var(--gfi-ln-hg))/2), 1); // # (14px, 16.5px, 1)
    }
  }  
  .gfi-lbl-underline {
    &.gfi-lbl-shrink {
      max-width: var(--gfi-u-lgnd-wd); // # calc(133% - 24px)
      @include mxTransformTranslateXYScale(var(--gfi-u-lgnd-pd)
        , calc(((var(--gfi-size) - var(--gfi-ln-hg))*0.757524 - var(--gfi-ln-hg)*0.5)*0.45 )
        , 0.75); // # 12px, 6.07px, 0.75  // # (12px, 7px, 0.75) original
    }
    &:not(.gfi-lbl-shrink) {
      max-width: var(--gfi-u-lgnd-wd-2); // # calc(100% - 24px)
      @include mxTransformTranslateXYScale(var(--gfi-u-lgnd-pd-2), calc((var(--gfi-size) - var(--gfi-ln-hg))/2), 1); // # 12px, 16.5px, 1
    }
  }
  .gfi-lbl-standard {
    &.gfi-lbl-shrink {
      max-width: 133%;
      @include mxTransformTranslateXYScale(0, -1.5px, 0.75); // # (0px, -1.5px, 0.75) original
    }
    &:not(.gfi-lbl-shrink) {
      max-width: 100%;
      @include mxTransformTranslateXYScale(0, calc((var(--gfi-size) - var(--gfi-ln-hg))*0.75), 1); // # 0px 24.75px, 1
    }
  }
  
 
  // Section "Frame".
  .gfi-frame { // outline: 1px dashed blueviolet;
    // #!! font-family: "Roboto","Helvetica","Arial",sans-serif;    // #!! font-weight: 400;    // #!! font-size: 1em;    // #!! line-height: 1.4375 em;  // line-height: 1.1876em; // small
    // #!! letter-spacing: 0.00938em; // TODO ??
    box-sizing: border-box;
    cursor: text;
    @include mxDisplayInlineFlex();
    // @include mxAlignItems(center);
    @include mxAlignItems(baseline);
    position: relative;
    border-radius: inherit;
    &.Grn-disabled {
      cursor: default;
    }
    // input {  outline: 1px dashed orange;} // # TODO temp;
    .gfi-damper {
      line-height: var(--gfi-ln-hg);
    }
  }
  
  .gfi-frm-outlined {
    padding: 0px var(--gfi-o-lgnd-pd); // # top/bottom: 0px right/left: 14px;
    &>.gfi-molding {
      margin-top: calc((var(--gfi-size) - var(--gfi-ln-hg))/2); // # 16.5px;
      margin-bottom: calc((var(--gfi-size) - var(--gfi-ln-hg))/2); // # 16.5px;
    }
  }
  .gfi-frm-underline {
    border-top-left-radius: var(--gfi-u-br-rd);
    border-top-right-radius: var(--gfi-u-br-rd);
    -webkit-transition: background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    transition: background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    padding: 0px var(--gfi-u-lgnd-pd); // # top/bottom: 0px, right/left: 12px;
    &>.gfi-molding {
      margin-top: calc((var(--gfi-size) - var(--gfi-ln-hg))*0.75); // # 24.75px;
      margin-bottom: calc((var(--gfi-size) - var(--gfi-ln-hg))*0.25); // # 8.25px;
    }
  }
  .gfi-frm-standard {
    &>.gfi-molding {
      margin-top: calc((var(--gfi-size) - var(--gfi-ln-hg))*0.75); // # 24.75px;
      margin-bottom: calc((var(--gfi-size) - var(--gfi-ln-hg))*0.25); // # 8.25px;
    }
  }

  // For "gfi-frm-underline" and "gfi-frm-standard"
  .gfi-substrate-frm {
    &:before {
      border-bottom-width: var(--gfi-br-wd);
      border-bottom-style: solid;
      left: 0;
      bottom: 0;
      content: "\00a0";
      position: absolute;
      right: 0;
      -webkit-transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      pointer-events: none;
    }
    &.Grn-disabled:before {
      border-bottom-style: dotted;
    }
    &:hover:not(.Grn-disabled):before {
      border-bottom-width: calc(var(--gfi-br-wd) + 1px);
    }

    &:after {
      border-bottom-width: calc(var(--gfi-br-wd) + 1px);
      border-bottom-style: solid;
      left: 0;
      bottom: 0;
      content: "";
      position: absolute;
      right: 0;
      @include mxTransformScaleX(0);
      -webkit-transition: -webkit-transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
      transition: transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
      pointer-events: none;
    }
    &.Grn-focused:after {
      @include mxTransformScaleX(1);
    }
  }

  // Section "Fieldset".
  .gfi-outlined-fieldset {
    text-align: left;
    position: absolute;
    bottom: 0;
    right: 0;
    top: 0;
    left: 0;
    margin: 0;
    padding: 0px calc(var(--gfi-o-lgnd-pd) - var(--gfi-lgnd-pd) - 0.4px); // (14px - 4,4px)=9,6px;
    pointer-events: none;
    border-radius: var(--gfi-o-br-rd);
    border-style: solid;
    overflow: hidden;
    min-width: 0%;
    &:not(.Grn-focused) {
      border-width: var(--gfi-br-wd);
    }
    &.Grn-focused {
      border-width: calc(var(--gfi-br-wd) + 1px);
    }
  }

  // Section "Legend".
  .gfi-legend {
    display: block;
    width: auto;
    height: var(--gfi-br-wd);
    font-size: 0.75em; // #!! 12px
    visibility: hidden;
    padding-inline-start: 0;
    padding-inline-end: 0;
    &:not(.gfi-lgnd-shrink) {
      max-width: 0.01px;
      -webkit-transition: max-width 50ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
      transition: max-width 50ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    }
    &.gfi-lgnd-shrink {
      max-width: 100%;
      -webkit-transition: max-width 100ms cubic-bezier(0.0, 0, 0.2, 1) 50ms;
      transition: max-width 100ms cubic-bezier(0.0, 0, 0.2, 1) 50ms;
      &.gfi-lgnd-indent {
        padding: 0 var(--gfi-lgnd-pd);
      }
    }
  }
  .gfi-lgnd-text {
    display: inline-block;
    height: inherit;
  }

  // Section "HelperText"
  .gfi-helper-text {
    // font-family: "Roboto","Helvetica","Arial",sans-serif; // #!!
    // font-weight: 400; // #!!
    min-height: 1.1875em;
    font-size: 0.75em; // #!! 12px
    line-height: 1.66; // #!!
    height: 1.66em;
    // #!! letter-spacing: 0.03333em; // #!!
    text-align: left;
    margin-top: 3px;
    margin-bottom: 0;
    &.gfi-hlp-outlined {
      margin-right: var(--gfi-o-lgnd-pd);
      margin-left: var(--gfi-o-lgnd-pd);
    }
    &.gfi-hlp-underline {
      margin-right: var(--gfi-u-lgnd-pd);
      margin-left: var(--gfi-u-lgnd-pd);
    }
  }
}
