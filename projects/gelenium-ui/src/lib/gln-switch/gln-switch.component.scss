/*# sourceURL=gln-switch.component.scss */

@import '../_styles/mx-align-items.scss';
@import '../_styles/mx-display-inline-flex.scss';
@import '../_styles/mx-transform-translate-x-y.scss';
@import '../_styles/mx-user-select.scss';

gln-switch {
  --glnsw--default-bg-h: var(--glncl-default-bg-h, var(--gln-default-bg-h));
  --glnsw--default-bg-s: var(--glncl-default-bg-s, var(--gln-default-bg-s));
  --glnsw--default-bg-l: var(--glncl-default-bg-l, var(--gln-default-bg-l));

  --glnsw--default-h: var(--glncl-default-h, var(--gln-default-h));
  --glnsw--default-s: var(--glncl-default-s, var(--gln-default-s));
  --glnsw--default-l: var(--glncl-default-l, var(--gln-default-l));

  --glnsw--primary-h: var(--glncl-primary-h, var(--gln-primary-h));
  --glnsw--primary-s: var(--glncl-primary-s, var(--gln-primary-s));
  --glnsw--primary-l: var(--glncl-primary-s, var(--gln-primary-l));

  @include mxAlignItems(center);
  @include mxDisplayInlineFlex();
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  outline: 0;
  @include mxUserSelect(none);
  &[pos-t] {
    flex-direction: column-reverse;
  }
  &[pos-b] {
    flex-direction: column;
  }
  &[pos-s] {
    flex-direction: row-reverse;
  }
  &[pos-e] {
    flex-direction: row;
  }

  &:not([dis]) {
    label {
      cursor: pointer;
    }
    &:not(.gln-checked) {
      --glnsw---bg-wrap-hov: var(--glnsw-def-wrap, hsla(var(--glnsw--default-h), var(--glnsw--default-s), 70%, 20%));
      --glnsw---bg-thumb   : var(--glnsw-def-thumb, hsl(var(--glnsw--default-bg-h), var(--glnsw--default-bg-s), var(--glnsw--default-bg-l)));
      --glnsw---bg-track   : var(--glnsw-def-track, hsl(var(--glnsw--default-h), var(--glnsw--default-s), 75%));
      --glntr-ripple-cl    : var(--glnsw-def-rip, hsla(var(--glnsw--default-h), var(--glnsw--default-s), 70%, 30%));
    }
    &.gln-checked {
      --glnsw---bg-wrap-hov: var(--glnsw-def-chk-wrap,hsla(var(--glnsw--primary-h), var(--glnsw--primary-s), 75%, 20%));
      --glnsw---bg-thumb   : var(--glnsw-def-chk-thumb, hsl(var(--glnsw--primary-h), var(--glnsw--primary-s), 50%));
      --glnsw---bg-track   : var(--glnsw-def-chk-track, hsl(var(--glnsw--primary-h), var(--glnsw--primary-s), 75%));
      --glntr-ripple-cl    : var(--glnsw-def-chk-rip, hsla(var(--glnsw--primary-h), var(--glnsw--primary-s), 75%, 30%));
    }
  }
  &[dis] {
    pointer-events: none;
    &:not(.gln-checked) {
      --glnsw---bg-thumb   : var(--glnsw-dis-thumb, hsl(var(--glnsw--default-bg-h), var(--glnsw--default-bg-s), 95%));
      --glnsw---bg-track   : var(--glnsw-dis-track, hsla(var(--glnsw--default-h), var(--glnsw--default-s), 60%, 30%));
    }
    &.gln-checked {
      --glnsw---bg-thumb   : var(--glnsw-dis-chk-thumb, hsl(var(--glnsw--primary-h), var(--glnsw--primary-s), 80%));
      --glnsw---bg-track   : var(--glnsw-dis-chk-track, hsl(var(--glnsw--primary-h), var(--glnsw--primary-s), 93%));
    }
  }

  &:not([noani]):not([hkInit]) {
    --glnsw-delay-150: 150ms;
  }

  &[rea] {
    pointer-events: none;
  }

  div[glnsw-container] {
    @include mxDisplayInlineFlex();
    border-radius: 2em;
    cursor: pointer;
    flex-shrink: 0;
    outline: 0;
    overflow: hidden;
    padding: var(--glnsw-cont-pd, 1em);
    position: relative;
    z-index: 0;
  }

  input[glnsw-input] {
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 1px;
    opacity: 0;
    position: absolute;
    @include mxUserSelect(none);
    width: 1px;
  }

  // ** Block: glnsw-wrap **

  span[glnsw-wrap] {
    background-color: transparent;
    border: 0;
    border-radius: 50%;
    left: 0;
    margin: 0;
    outline: 0;
    padding: var(--glnsw-wrap-pd, 0.75em);
    position: absolute;
    top: 0;
    @include mxUserSelect(none);
    -webkit-transition: left var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms, -webkit-transform var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    transition: left var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    z-index: 1;
  }
  
  &:not([dis]):not([noHov]) div[glnsw-container]:hover span[glnsw-wrap] {
    background-color: var(--glnsw---bg-wrap-hov);
  }
  &[chk] span[glnsw-wrap] {
    @include  mxTransform_TranslateXY(var(--glnsw-wrap-shift, 1.25em), 0); 
  }

  // ** Block: glnsw-thumb **

  span[glnsw-thumb] {
    background-color: var(--glnsw---bg-thumb);
    border-radius: 1.5em;
    box-shadow: 0px 1px 3px 1px rgb(0 0 0 / 15%), 0px 0px 3px 1px rgb(0 0 0 / 15%);
    display: block;
    height: 1.5em;
    -webkit-transition: background-color var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    transition: background-color var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    width: 1.5em;
  }

  // ** Block: glnsw-track **

  span[glnsw-track] {
    background-color: var(--glnsw---bg-track);
    border-radius: 0.5em;
    height: 1em;
    width: 2.3em;
    -webkit-transition: opacity var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms, background-color var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    transition: opacity var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms, background-color var(--glnsw-delay-150, 0ms) cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    @include mxUserSelect(none);
    z-index: 0;
  }

  // ** Block: glnsw-label **

  label[glnsw-label] {
    font-size: var(--glnsw-pr-font-size);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  // **  **
}
